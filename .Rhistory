data <- read.csv(file.path(project_path, "res", paste(paste(exp, "avg", sep = "_"), ".csv", sep = "")))
training_data <- data %>%
filter(ses==2) %>%
select(sub, train_type, switch, context_changes, accuracy,
setting_errors, general_errors) %>%
mutate(train_type = train_type-1) %>%
mutate(sub = factor(sub),
train_type = factor(train_type),
train_type = case_when(train_type==0~"low",train_type==1~"high"),
switch = factor(switch),
switch = case_when(switch==0~"stay",switch==1~"switch"))
test_data <- data %>%
filter(ses==3,switch==0) %>%
select(sub, train_type, transfer, full_transfer_first, accuracy, learned_setting_errors, general_errors)
tmp <- data %>% filter(ses == 2 & switch == 0) %>%
select(sub, context, transition_probabilities) %>%
group_by(sub) %>%
summarise(mu_tp = mean(transition_probabilities))
test_data <- inner_join(test_data, tmp, by="sub")
k4_data <- read_csv(file.path(project_path, "res", paste(paste(exp, "maggi-k4", sep = "_"), ".csv", sep = "")), show_col_types = FALSE)
k4_data <- k4_data %>%
filter(ses==3) %>%
select(sid, transfer, nclicks, k4_onset) %>%
rename(sub=sid)
test_data <- inner_join(test_data, k4_data, by=c("sub","transfer"))
test_data <- test_data %>%
mutate(train_type = train_type-1) %>%
mutate(sub = factor(sub),
train_type = factor(train_type),
train_type = case_when(train_type==0~"low",train_type==1~"high"),
transfer = factor(transfer),
transfer = case_when(transfer==1~"complete",transfer==2~"partial"),
full_transfer_first = factor(full_transfer_first),
full_transfer_first = case_when(full_transfer_first==0~"pf",full_transfer_first==1~"cf"))
training_results <- aov_ez("sub", "general_errors", training_data, within = "switch", between = c("train_type"), fun_aggregate = mean)
summary(training_results)
sum_emm_int <- emmeans(training_results, c("train_type", "switch")) #get est. marginal means
switch_effect <- c(-1, -1, 1, 1) #make a vector comparing switch vs stay trials
main_effect_contrasts <- (list(switch_effect))
contrast(sum_emm_int, main_effect_contrasts) #perform contrasts analyses for main effects
training_data %>%
group_by(switch) %>%
summarise(means = mean(general_errors),
sd = sd(general_errors))
training_results <- aov_ez("sub","context_changes", training_data, within = "switch", between = c("train_type"), fun_aggregate = mean)
summary(training_results)
sum_emm_int <- emmeans(training_results, c("train_type", "switch"))
switch_effect <- c(-1, -1, 1, 1) #vector comparing complete vs partial transfer
group_effect <- c(1, -1, 1, -1) #vector comparing low switch vs high switch
interaction_effects<-switch_effect * group_effect #multiply vectors
contrast(sum_emm_int, list(interaction_effects)) #perform contrasts analyses
low_switch_effect <- c(0, -1, 0, 1) #comparing accuracies for low-switch
high_switch_effect <- c(1, 0, -1, 0) #comparing accuracies for high-switch
stay_trials_effect <- c(1, -1, 0, 0) # comparing between groups on stay trials
switch_trials_effect <- c(0, 0, 1, -1) # comparing  between groups on sitch trials
simple_effect_contrasts <- list(low_switch_effect,
high_switch_effect,
stay_trials_effect,
switch_trials_effect)
contrast(sum_emm_int, simple_effect_contrasts) #contrasts analyses for simple effects
training_data %>%
group_by(train_type, switch) %>%
summarise(means = mean(context_changes),
sd = sd(context_changes))
test_results <- aov_ez("sub", "accuracy", test_data, within = "transfer", between = c("train_type", "full_transfer_first"))
summary(test_results)
#   interaction
sum_emm_int <- emmeans(test_results, c("train_type", "transfer"))
transfer_effect <- c(1, 1, -1, -1) #vector comparing complete vs partial transfer
group_effect <- c(1, -1, 1, -1) #vector comparing low switch vs high switch
interaction_effects<-transfer_effect * group_effect #multiply vectors
contrast(sum_emm_int, list(interaction_effects)) #perform contrasts analyses
#   simple effects
low_switch_transfer_effect <- c(0, 1, 0, -1) #comparing accuracies for low-switch only
high_switch_transfer_effect <- c(1, 0, -1, 0) #comparing accuracies for high-switch only
complete_transfer_effect <- c(1, -1, 0, 0) # comparing between groups on stay trials
partial_transfer_effect <- c(0, 0, 1, -1) # comparing  between groups on sitch trials
simple_effect_contrasts <- list(low_switch_transfer_effect,
high_switch_transfer_effect,
complete_transfer_effect,
partial_transfer_effect
)
contrast(sum_emm_int, simple_effect_contrasts) #contrasts analyses for simple effects
#   variance
test_data %>%
group_by(train_type, transfer, full_transfer_first) %>%
summarise(variance = var(accuracy))
#   mean and sd
test_data %>%
group_by(train_type, transfer) %>%
summarise(mean_acc = mean(accuracy),
sd = sd(accuracy))
test_results <- aov_ez("sub", "accuracy", test_data, within = "transfer", between = c("train_type", "full_transfer_first"))
summary(test_results)
test_data %>%
group_by(transfer) %>%
summarise(mean = mean(learned_setting_errors),
sd = sd(learned_setting_errors))
test_results <- aov_ez("sub", "general_errors", test_data, within = "transfer", between = c("train_type", "full_transfer_first"))
summary(test_results)
test_results <- ezANOVA(data=test_data, dv=general_errors, wid=sub, within=transfer, between=.(train_type, full_transfer_first))
test_results
test_results <- aov_ez("sub", "general_errors", test_data, within = "transfer", between = c("train_type", "full_transfer_first"))
summary(test_results)
test_data
test_results <- ezANOVA(data=test_data, dv=general_errors, wid=sub, within=transfer, between=.(train_type, full_transfer_first))
test_results
test_results <- aov_ez("sub", "general_errors", test_data, within = "transfer", between = c("train_type", "full_transfer_first"))
summary(test_results)
test_data
test_results <- ezANOVA(data=test_data, dv=general_errors, wid=sub, within=transfer, between=.(train_type, full_transfer_first))
test_results
View(test_data)
test_results <- aov_ez("sub", "general_errors", test_data, within = "transfer", between = c("train_type", "full_transfer_first"))
summary(test_results)
test_data %>% select(!sub) %>% group_by(train_type,full_transfer_first,transfer) %>%
summarise_all(mean)
test_results <- ezANOVA(data=test_data, dv=general_errors, wid=sub, within=transfer, between=.(train_type, full_transfer_first))
test_results
test_results <- aov_ez("sub", "general_errors", test_data, within = "transfer", between = c("train_type", "full_transfer_first"))
summary(test_results)
test_data %>% select(!sub) %>% group_by(train_type,full_transfer_first,transfer) %>%
summarise_all(mean)
test_results <- ezANOVA(data=test_data, dv=general_errors, wid=sub, within=transfer, between=.(train_type, full_transfer_first))
test_results
test_results <- aov_ez("sub", "general_errors", test_data, within = "transfer", between = c("train_type", "full_transfer_first"))
summary(test_results)
res <- test_data %>% select(!sub) %>% group_by(train_type,full_transfer_first,transfer) %>%
summarise_all(mean)
print(res)
test_results <- ezANOVA(data=test_data, dv=general_errors, wid=sub, within=transfer, between=.(train_type, full_transfer_first))
test_results
View(res)
source("~/Documents/academe/projects/doors/src/run_wrangling.R", echo=TRUE)
res$general_errors = 1 - res$accuracy - res$learned_setting_errors #this = nc / n_clicks in the first phases. at test, it tracks clicks on doors that have never been relevant (important for exp_lt)
res$context_changes[intersect(which(res$switch==1),which(res$ses==2))] <- res$context_changes[intersect(which(res$switch==1),which(res$ses==2))]-1
rt <- grp_data %>%
group_by(sub, ses, subses, t, context, train_type, transfer) %>%
filter(door_cc == 1) %>%
summarise(rt = min(off)) # time to first correct click offset
res$rt <- rt$rt
res$win <- 4-res$n_clicks >= 0
# trim RTs
if (exp=="exp_ts"){
res <- res %>% filter(rt<=10) %>% ungroup() %>% group_by(ses,context,switch) %>% filter(rt<=(mean(rt)+(3*sd(rt))))
}
fnl <- file.path(project_path, "res", paste(paste(exp, "trl", sep = "_"), ".csv", sep = ""))
write_csv(res, fnl)
# by subject
#   grouping by subsession
res <- res %>%
group_by(sub, ses, subses, context, switch, train_type, transfer, full_transfer_first, original_house) %>%
summarise_all(mean)
res <- res %>% ungroup() %>% mutate(transition_probabilities = c(kronecker(matrix(1, nrow(res), 1), NA)))
if(exp=="exp_lt"){
res$transition_probabilities[which(res$ses==2)] <- get_transition_probabilities(grp_data)
}
res <- res %>% select(!t)
fnl <- file.path(project_path, "res", paste(paste(exp, "avg-ss", sep = "_"), ".csv", sep = ""))
write_csv(res, fnl)
#   just grouping by session
res <- res %>%
group_by(sub, ses, context, switch, train_type, transfer, full_transfer_first, original_house) %>%
summarise_all(mean)
res <- res %>% ungroup() %>% mutate(transition_probabilities = c(kronecker(matrix(1, nrow(res), 1), NA)))
if(exp=="exp_lt"){
res$transition_probabilities[which(res$ses==2)] <- get_transition_probabilities(grp_data)
}
res <- res %>% select(!subses)
fnl <- file.path(project_path, "res", paste(paste(exp, "avg", sep = "_"), ".csv", sep = ""))
write_csv(res, fnl)
#| include: false
library(tidyverse)
library(ez)
library(emmeans)
library(afex)
afex_options(emmeans_model = "multivariate")
project_path <- getwd()
exp <- "exp_lt" # experiment: 'exp_ts' (task-switching) or 'exp_lt' (learning transfer)
data <- read.csv(file.path(project_path, "res", paste(paste(exp, "avg", sep = "_"), ".csv", sep = "")))
training_data <- data %>%
filter(ses==2) %>%
select(sub, train_type, switch, context_changes, accuracy,
setting_errors, general_errors) %>%
mutate(train_type = train_type-1) %>%
mutate(sub = factor(sub),
train_type = factor(train_type),
train_type = case_when(train_type==0~"low",train_type==1~"high"),
switch = factor(switch),
switch = case_when(switch==0~"stay",switch==1~"switch"))
test_data <- data %>%
filter(ses==3,switch==0) %>%
select(sub, train_type, transfer, full_transfer_first, accuracy, learned_setting_errors, general_errors)
tmp <- data %>% filter(ses == 2 & switch == 0) %>%
select(sub, context, transition_probabilities) %>%
group_by(sub) %>%
summarise(mu_tp = mean(transition_probabilities))
test_data <- inner_join(test_data, tmp, by="sub")
k4_data <- read_csv(file.path(project_path, "res", paste(paste(exp, "maggi-k4", sep = "_"), ".csv", sep = "")), show_col_types = FALSE)
k4_data <- k4_data %>%
filter(ses==3) %>%
select(sid, transfer, nclicks, k4_onset) %>%
rename(sub=sid)
test_data <- inner_join(test_data, k4_data, by=c("sub","transfer"))
test_data <- test_data %>%
mutate(train_type = train_type-1) %>%
mutate(sub = factor(sub),
train_type = factor(train_type),
train_type = case_when(train_type==0~"low",train_type==1~"high"),
transfer = factor(transfer),
transfer = case_when(transfer==1~"complete",transfer==2~"partial"),
full_transfer_first = factor(full_transfer_first),
full_transfer_first = case_when(full_transfer_first==0~"pf",full_transfer_first==1~"cf"))
training_results <- aov_ez("sub", "general_errors", training_data, within = "switch", between = c("train_type"), fun_aggregate = mean)
#| include: false
library(tidyverse)
library(ez)
library(emmeans)
library(afex)
afex_options(emmeans_model = "multivariate")
project_path <- getwd()
exp <- "exp_lt" # experiment: 'exp_ts' (task-switching) or 'exp_lt' (learning transfer)
data <- read.csv(file.path(project_path, "res", paste(paste(exp, "avg", sep = "_"), ".csv", sep = "")))
training_data <- data %>%
filter(ses==2) %>%
select(sub, train_type, switch, context_changes, accuracy,
setting_errors, general_errors) %>%
mutate(train_type = train_type-1) %>%
mutate(sub = factor(sub),
train_type = factor(train_type),
train_type = case_when(train_type==0~"low",train_type==1~"high"),
switch = factor(switch),
switch = case_when(switch==0~"stay",switch==1~"switch"))
test_data <- data %>%
filter(ses==3,switch==0) %>%
select(sub, train_type, transfer, full_transfer_first, accuracy, learned_setting_errors, general_errors)
tmp <- data %>% filter(ses == 2 & switch == 0) %>%
select(sub, context, transition_probabilities) %>%
group_by(sub) %>%
summarise(mu_tp = mean(transition_probabilities))
test_data <- inner_join(test_data, tmp, by="sub")
k4_data <- read_csv(file.path(project_path, "res", paste(paste(exp, "maggi-k4", sep = "_"), ".csv", sep = "")), show_col_types = FALSE)
k4_data <- k4_data %>%
filter(ses==3) %>%
select(sid, transfer, nclicks, k4_onset) %>%
rename(sub=sid)
test_data <- inner_join(test_data, k4_data, by=c("sub","transfer"))
test_data <- test_data %>%
mutate(train_type = train_type-1) %>%
mutate(sub = factor(sub),
train_type = factor(train_type),
train_type = case_when(train_type==0~"low",train_type==1~"high"),
transfer = factor(transfer),
transfer = case_when(transfer==1~"complete",transfer==2~"partial"),
full_transfer_first = factor(full_transfer_first),
full_transfer_first = case_when(full_transfer_first==0~"pf",full_transfer_first==1~"cf"))
training_results <- aov_ez("sub", "general_errors", training_data, within = "switch", between = c("train_type"), fun_aggregate = mean)
test_data <- data %>%
filter(ses==3,switch==0) %>%
select(sub, train_type, transfer, full_transfer_first, accuracy, learned_setting_errors, general_errors)
tmp <- data %>% filter(ses == 2 & switch == 0) %>%
select(sub, context, transition_probabilities) %>%
group_by(sub) %>%
summarise(mu_tp = mean(transition_probabilities))
test_data <- inner_join(test_data, tmp, by="sub")
k4_data <- read_csv(file.path(project_path, "res", paste(paste(exp, "maggi-k4", sep = "_"), ".csv", sep = "")), show_col_types = FALSE)
k4_data <- k4_data %>%
filter(ses==3) %>%
select(sid, transfer, nclicks, k4_onset) %>%
rename(sub=sid)
test_data <- inner_join(test_data, k4_data, by=c("sub","transfer"))
test_data <- test_data %>%
mutate(train_type = train_type-1)
test_data <- test_data %>%
#mutate(train_type = train_type-1) %>%
mutate(sub = factor(sub),
train_type = factor(train_type),
train_type = case_when(train_type==0~"low",train_type==1~"high"),
transfer = factor(transfer),
transfer = case_when(transfer==1~"complete",transfer==2~"partial"),
full_transfer_first = factor(full_transfer_first),
full_transfer_first = case_when(full_transfer_first==0~"pf",full_transfer_first==1~"cf"))
View(training_data)
source("~/Documents/academe/projects/doors/src/run_wrangling.R", echo=TRUE)
res <- grp_data %>%
group_by(sub, ses, subses, t, context, train_type, transfer, full_transfer_first, original_house) %>%
summarise(
switch = max(switch), n_clicks = n(), n_cc = sum(door_cc), n_oc = sum(door_oc), n_lc = sum(door_lc), n_nc = sum(door_nc),
setting_sticks = select_oc[1],
setting_slips = max(select_oc_late),
context_changes = sum(select_cc)+sum(select_oc),
accuracy = n_cc / n_clicks,
setting_errors = n_oc / n_clicks,
general_errors = n_nc / n_clicks,
learned_setting_errors = n_lc / n_clicks
)
res$context_changes[intersect(which(res$switch==1),which(res$ses==2))] <- res$context_changes[intersect(which(res$switch==1),which(res$ses==2))]-1
rt <- grp_data %>%
group_by(sub, ses, subses, t, context, train_type, transfer) %>%
filter(door_cc == 1) %>%
summarise(rt = min(off)) # time to first correct click offset
res$rt <- rt$rt
res$win <- 4-res$n_clicks >= 0
# trim RTs
if (exp=="exp_ts"){
res <- res %>% filter(rt<=10) %>% ungroup() %>% group_by(ses,context,switch) %>% filter(rt<=(mean(rt)+(3*sd(rt))))
}
fnl <- file.path(project_path, "res", paste(paste(exp, "trl", sep = "_"), ".csv", sep = ""))
write_csv(res, fnl)
# by subject
#   grouping by subsession
res <- res %>%
group_by(sub, ses, subses, context, switch, train_type, transfer, full_transfer_first, original_house) %>%
summarise_all(mean)
res <- res %>% ungroup() %>% mutate(transition_probabilities = c(kronecker(matrix(1, nrow(res), 1), NA)))
if(exp=="exp_lt"){
res$transition_probabilities[which(res$ses==2)] <- get_transition_probabilities(grp_data)
}
res <- res %>% select(!t)
fnl <- file.path(project_path, "res", paste(paste(exp, "avg-ss", sep = "_"), ".csv", sep = ""))
write_csv(res, fnl)
#   just grouping by session
res <- res %>%
group_by(sub, ses, context, switch, train_type, transfer, full_transfer_first, original_house) %>%
summarise_all(mean)
res <- res %>% ungroup() %>% mutate(transition_probabilities = c(kronecker(matrix(1, nrow(res), 1), NA)))
if(exp=="exp_lt"){
res$transition_probabilities[which(res$ses==2)] <- get_transition_probabilities(grp_data)
}
res <- res %>% select(!subses)
fnl <- file.path(project_path, "res", paste(paste(exp, "avg", sep = "_"), ".csv", sep = ""))
write_csv(res, fnl)
#| include: false
library(tidyverse)
library(ez)
library(emmeans)
library(afex)
afex_options(emmeans_model = "multivariate")
project_path <- getwd()
exp <- "exp_lt" # experiment: 'exp_ts' (task-switching) or 'exp_lt' (learning transfer)
data <- read.csv(file.path(project_path, "res", paste(paste(exp, "avg", sep = "_"), ".csv", sep = "")))
training_data <- data %>%
filter(ses==2) %>%
select(sub, train_type, switch, context_changes, accuracy,
setting_errors, general_errors) %>%
mutate(train_type = train_type-1) %>%
mutate(sub = factor(sub),
train_type = factor(train_type),
train_type = case_when(train_type==0~"low",train_type==1~"high"),
switch = factor(switch),
switch = case_when(switch==0~"stay",switch==1~"switch"))
test_data <- data %>%
filter(ses==3,switch==0) %>%
select(sub, train_type, transfer, full_transfer_first, accuracy, learned_setting_errors)
test_data$general_errors <- 1 - test_data$accuracy - test_data$learned_setting_errors
tmp <- data %>% filter(ses == 2 & switch == 0) %>%
select(sub, context, transition_probabilities) %>%
group_by(sub) %>%
summarise(mu_tp = mean(transition_probabilities))
test_data <- inner_join(test_data, tmp, by="sub")
k4_data <- read_csv(file.path(project_path, "res", paste(paste(exp, "maggi-k4", sep = "_"), ".csv", sep = "")), show_col_types = FALSE)
k4_data <- k4_data %>%
filter(ses==3) %>%
select(sid, transfer, nclicks, k4_onset) %>%
rename(sub=sid)
test_data <- inner_join(test_data, k4_data, by=c("sub","transfer"))
test_data <- test_data %>%
mutate(train_type = train_type-1) %>%
mutate(sub = factor(sub),
train_type = factor(train_type),
train_type = case_when(train_type==0~"low",train_type==1~"high"),
transfer = factor(transfer),
transfer = case_when(transfer==1~"complete",transfer==2~"partial"),
full_transfer_first = factor(full_transfer_first),
full_transfer_first = case_when(full_transfer_first==0~"pf",full_transfer_first==1~"cf"))
training_results <- aov_ez("sub", "general_errors", training_data, within = "switch", between = c("train_type"), fun_aggregate = mean)
summary(training_results)
sum_emm_int <- emmeans(training_results, c("train_type", "switch")) #get est. marginal means
switch_effect <- c(-1, -1, 1, 1) #make a vector comparing switch vs stay trials
main_effect_contrasts <- (list(switch_effect))
contrast(sum_emm_int, main_effect_contrasts) #perform contrasts analyses for main effects
training_data %>%
group_by(switch) %>%
summarise(means = mean(general_errors),
sd = sd(general_errors))
training_results <- aov_ez("sub","context_changes", training_data, within = "switch", between = c("train_type"), fun_aggregate = mean)
summary(training_results)
sum_emm_int <- emmeans(training_results, c("train_type", "switch"))
switch_effect <- c(-1, -1, 1, 1) #vector comparing complete vs partial transfer
group_effect <- c(1, -1, 1, -1) #vector comparing low switch vs high switch
interaction_effects<-switch_effect * group_effect #multiply vectors
contrast(sum_emm_int, list(interaction_effects)) #perform contrasts analyses
low_switch_effect <- c(0, -1, 0, 1) #comparing accuracies for low-switch
high_switch_effect <- c(1, 0, -1, 0) #comparing accuracies for high-switch
stay_trials_effect <- c(1, -1, 0, 0) # comparing between groups on stay trials
switch_trials_effect <- c(0, 0, 1, -1) # comparing  between groups on sitch trials
simple_effect_contrasts <- list(low_switch_effect,
high_switch_effect,
stay_trials_effect,
switch_trials_effect)
contrast(sum_emm_int, simple_effect_contrasts) #contrasts analyses for simple effects
training_data %>%
group_by(train_type, switch) %>%
summarise(means = mean(context_changes),
sd = sd(context_changes))
test_results <- aov_ez("sub", "accuracy", test_data, within = "transfer", between = c("train_type", "full_transfer_first"))
summary(test_results)
#   interaction
sum_emm_int <- emmeans(test_results, c("train_type", "transfer"))
transfer_effect <- c(1, 1, -1, -1) #vector comparing complete vs partial transfer
group_effect <- c(1, -1, 1, -1) #vector comparing low switch vs high switch
interaction_effects<-transfer_effect * group_effect #multiply vectors
contrast(sum_emm_int, list(interaction_effects)) #perform contrasts analyses
#   simple effects
low_switch_transfer_effect <- c(0, 1, 0, -1) #comparing accuracies for low-switch only
high_switch_transfer_effect <- c(1, 0, -1, 0) #comparing accuracies for high-switch only
complete_transfer_effect <- c(1, -1, 0, 0) # comparing between groups on stay trials
partial_transfer_effect <- c(0, 0, 1, -1) # comparing  between groups on sitch trials
simple_effect_contrasts <- list(low_switch_transfer_effect,
high_switch_transfer_effect,
complete_transfer_effect,
partial_transfer_effect
)
contrast(sum_emm_int, simple_effect_contrasts) #contrasts analyses for simple effects
#   variance
test_data %>%
group_by(train_type, transfer, full_transfer_first) %>%
summarise(variance = var(accuracy))
#   mean and sd
test_data %>%
group_by(train_type, transfer) %>%
summarise(mean_acc = mean(accuracy),
sd = sd(accuracy))
test_results <- aov_ez("sub", "accuracy", test_data, within = "transfer", between = c("train_type", "full_transfer_first"))
summary(test_results)
test_data %>%
group_by(transfer) %>%
summarise(mean = mean(learned_setting_errors),
sd = sd(learned_setting_errors))
test_results <- aov_ez("sub", "general_errors", test_data, within = "transfer", between = c("train_type", "full_transfer_first"))
summary(test_results)
test_results <- ezANOVA(data=test_data, dv=general_errors, wid=sub, within=transfer, between=.(train_type, full_transfer_first))
test_results
#   correlation test for low switch group
cor_test_data_low <- test_data %>% filter(transfer == "partial", train_type == "low")
with(cor_test_data_low, cor.test(x=mu_tp, y=accuracy))
#   correlation test for high switch group
cor_test_data_high <- test_data %>% filter(transfer == "partial", train_type == "high")
with(cor_test_data_high, cor.test(x=mu_tp, y=accuracy))
test_data <- test_data %>% filter(k4_onset != Inf)
length(unique(test_data$sub))
test_results <- aov_ez("sub", "k4_onset", test_data, within = "transfer", between = c("train_type", "full_transfer_first"))
summary(test_results)
#   interaction effect
sum_emm_int <- emmeans(test_results, c("train_type", "transfer"))
transfer_effect <- c(1, 1, -1, -1) #vector comparing complete vs partial transfer
group_effect <- c(1, -1, 1, -1) #vector comparing low switch vs high switch
interaction_effects<-transfer_effect * group_effect #multiply vectors
contrast(sum_emm_int, list(interaction_effects)) #perform contrasts analyses
#   simple effects
low_switch_transfer_effect <- c(0, 1, 0, -1) #comparing accuracie for low-switch only
high_switch_transfer_effect <- c(1, 0, -1, 0) #comparing accuracies for high-switch only
complete_transfer_effect <- c(1, -1, 0, 0) # comparing between groups on stay trials
partial_transfer_effect <- c(0, 0, 1, -1) # comparing  between groups on sitch trials
eimple_effect_contrasts <- list(low_switch_transfer_effect, #simple effects
high_switch_transfer_effect,
complete_transfer_effect,
partial_transfer_effect
)
contrast(sum_emm_int, simple_effect_contrasts) #contrasts analyses for simple effects
#   mean and sd
test_means <- test_data %>%
group_by(train_type, transfer) %>%
summarise(mean_k4 = mean(k4_onset),
sd = sd(k4_onset))
??ezANOVA
training_data <- data %>%
filter(ses==2) %>%
select(sub, train_type, switch, context_changes, accuracy,
setting_errors, general_errors) %>%
mutate(train_type = train_type-1) %>%
mutate(sub = factor(sub),
train_type = factor(train_type),
train_type = case_when(train_type==0~"low",train_type==1~"high"),
switch = factor(switch),
switch = case_when(switch==0~"stay",switch==1~"switch"))
test_data <- data %>%
filter(ses==3,switch==0) %>%
select(sub, train_type, transfer, full_transfer_first, accuracy, learned_setting_errors)
test_data$general_errors <- 1 - test_data$accuracy - test_data$learned_setting_errors
tmp <- data %>% filter(ses == 2 & switch == 0) %>%
select(sub, context, transition_probabilities) %>%
group_by(sub) %>%
summarise(mu_tp = mean(transition_probabilities))
test_data <- inner_join(test_data, tmp, by="sub")
k4_data <- read_csv(file.path(project_path, "res", paste(paste(exp, "maggi-k4", sep = "_"), ".csv", sep = "")), show_col_types = FALSE)
k4_data <- k4_data %>%
filter(ses==3) %>%
select(sid, transfer, nclicks, k4_onset) %>%
rename(sub=sid)
test_data <- inner_join(test_data, k4_data, by=c("sub","transfer"))
test_data <- test_data %>%
mutate(train_type = train_type-1) %>%
mutate(sub = factor(sub),
train_type = factor(train_type),
train_type = case_when(train_type==0~"low",train_type==1~"high"),
transfer = factor(transfer),
transfer = case_when(transfer==1~"complete",transfer==2~"partial"),
full_transfer_first = factor(full_transfer_first),
full_transfer_first = case_when(full_transfer_first==0~"pf",full_transfer_first==1~"cf"))
test_results <- aov_ez("sub", "accuracy", test_data, within = "transfer", between = c("train_type", "full_transfer_first"), type=2)
summary(test_results)
