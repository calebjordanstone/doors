# stereotypy measures from train phase
fnl <-
file.path(project_path, "res", paste(paste(version, exp, mes, "stereotypy", sep = "_"), ".csv",
sep = ""
))
stereo <- read_csv(fnl, show_col_types = FALSE)
# general accuracy and response times for all phases
fnl <-
file.path(project_path, "res", paste(paste(version, exp, mes, "avg", sep = "_"), ".csv",
sep = ""
))
avg <- read_csv(fnl)
for (ctx in 1:2) {
### transitions
p <- stereo %>%
filter(ses == 2, context == ctx) %>%
ggplot() +
geom_point(
aes(
x = transition_counts,
y = accuracy,
colour = factor(subses)
),
alpha = 0.8,
size = 15
) +
geom_text(
aes(
x = transition_counts,
y = accuracy, label = sub
),
alpha = 0.8,
size = 8,
position = position_jitter(width = 0.1, height = 0.05)
) +
theme_minimal(base_size = label_sz, base_family = "Roboto") +
ylim(0, 1.1) +
xlim(0.5, 4.5) +
labs(
title = "Transitions by accuracy during training",
x = "Transitions",
y = "Accuracy",
colour = "Half of session"
) +
scale_colour_brewer(
palette = "Greens",
labels = unique(stereo$subses)
) +
theme(
panel.background = element_rect(fill = "white", colour = "white"),
plot.background = element_rect(fill = "white", colour = "white")
)
fnl <-
file.path(project_path, "fig", paste(
paste(
version,
exp,
mes,
"transitions",
paste("context",
ctx,
sep = "-"
),
sep = "_"
),
".png",
sep = ""
))
ggsave(fnl, plot = p, width = 14, height = 7)
}
View(stereo)
x <- avg %>% filter(ses==3)
x <- avg %>% filter(ses==3,switch==0)
y <- stereo %>% filter(sess==2,switch==0)
y <- stereo %>% filter(ses==2,switch==0)
y <- stereo %>% filter(ses==2)
View(y)
View(x)
y <- y %>% group_by(sub,ses,context) %>% summarise_all(mean)
stereo_avg <-
stereo %>%
group_by(sub, ses, context) %>%
summarise_all(mean)
stereo_avg$accuracy_test <-
avg %>%
filter(ses == 3, switch == 0) %>%
pull(accuracy) # add test accuracy to stereo results
View(stereo_avg)
transferred_context <- avg %>% filter(ses==3,context==1) %>% pull(transferred_context)
View(avg)
transferred_context <- avg %>% filter(ses==3,context==1) %>% pull(train_context_transferred)
transferred_context
### re-clicks
p <- stereo_test %>%
filter(ses == 2, context == ctx) %>%
ggplot() +
geom_point(
aes(
x = reclicks,
y = accuracy,
colour = factor(context_test)
),
alpha = 0.8,
size = 15
) +
geom_text(
aes(
x = reclicks,
y = accuracy, label = sub
),
alpha = 0.8,
size = 8,
position = position_jitter(width = 0.1, height = 0.05)
) +
theme_minimal(base_size = label_sz, base_family = "Roboto") +
ylim(0, 1.1) +
xlim(0, 8.5) +
labs(
title = "Transfer Accuracy by Train Re-clicks",
x = "Re-clicks",
y = "Accuracy",
colour = "Test Context"
) +
scale_colour_brewer(
palette = "Greens",
labels = c("Full transfer","Partial transfer")
) +
theme(
panel.background = element_rect(fill = "white", colour = "white"),
plot.background = element_rect(fill = "white", colour = "white")
)
stereo_test <-
stereo %>%
group_by(sub, ses, context) %>%
summarise_all(mean)
stereo_test$accuracy_test <-
avg %>%
filter(ses == 3, switch == 0) %>%
pull(accuracy) # add test accuracy to stereo results
stereo_test$context_test <-
avg %>%
filter(ses==3, switch==0) %>%
pull(context)
### re-clicks
p <- stereo_test %>%
filter(ses == 2, context == ctx) %>%
ggplot() +
geom_point(
aes(
x = reclicks,
y = accuracy,
colour = factor(context_test)
),
alpha = 0.8,
size = 15
) +
geom_text(
aes(
x = reclicks,
y = accuracy, label = sub
),
alpha = 0.8,
size = 8,
position = position_jitter(width = 0.1, height = 0.05)
) +
theme_minimal(base_size = label_sz, base_family = "Roboto") +
ylim(0, 1.1) +
xlim(0, 8.5) +
labs(
title = "Transfer Accuracy by Train Re-clicks",
x = "Re-clicks",
y = "Accuracy",
colour = "Test Context"
) +
scale_colour_brewer(
palette = "Greens",
labels = c("Full transfer","Partial transfer")
) +
theme(
panel.background = element_rect(fill = "white", colour = "white"),
plot.background = element_rect(fill = "white", colour = "white")
)
fnl <-
file.path(project_path, "fig", paste(
paste(
version,
exp,
mes,
"reclicks",
paste("context",
ctx,
sep = "-"
),
sep = "_"
),
".png",
sep = ""
))
ggsave(fnl, plot = p, width = 14, height = 7)
View(stereo_test)
stereo_test %>%
filter(ses == 2, context_test == ctx) %>%
ggplot() +
geom_point(
aes(
x = reclicks,
y = accuracy
),
alpha = 0.8,
size = 15
) +
geom_text(
aes(
x = reclicks,
y = accuracy,
label = sub
),
alpha = 0.8,
size = 8,
position = position_jitter(width = 0.1, height = 0.05)
) +
theme_minimal(base_size = label_sz, base_family = "Roboto") +
ylim(0, 1.1) +
xlim(0, 8.5) +
labs(
title = "Transfer Accuracy by Train Re-clicks",
x = "Re-clicks",
y = "Accuracy",
) +
scale_colour_brewer(
palette = "Greens",
) +
theme(
panel.background = element_rect(fill = "white", colour = "white"),
plot.background = element_rect(fill = "white", colour = "white")
)
sub
reclicks
stereo_avg$reclicks
stereo_test %>%
filter(ses == 2, context_test == ctx) %>%
ggplot() +
geom_point(
aes(
x = reclicks,
y = accuracy
),
alpha = 0.8,
size = 15
) +
geom_text(
aes(
x = reclicks,
y = accuracy,
label = sub
),
alpha = 0.8,
size = 8,
position = position_jitter(width = 0.1, height = 0.05)
) +
theme_minimal(base_size = label_sz, base_family = "Roboto") +
ylim(0, 1.1) +
xlim(0, 8.5) +
labs(
title = "Transfer Accuracy by Train Re-clicks",
x = "Re-clicks",
if (ctx==1){y = "Full Transfer Accuracy"}else{y = "Partial Transfer Accuracy"},
) +
scale_colour_brewer(
palette = "Greens",
) +
theme(
panel.background = element_rect(fill = "white", colour = "white"),
plot.background = element_rect(fill = "white", colour = "white")
)
test_labels = c("a","b")
test_labels
test_labels[1]
stereo_test %>%
filter(ses == 2, context_test == ctx) %>%
ggplot() +
geom_point(
aes(
x = reclicks,
y = accuracy
),
alpha = 0.8,
size = 15
) +
geom_text(
aes(
x = reclicks,
y = accuracy,
label = sub
),
alpha = 0.8,
size = 8,
position = position_jitter(width = 0.1, height = 0.05)
) +
theme_minimal(base_size = label_sz, base_family = "Roboto") +
ylim(0, 1.1) +
xlim(0, 8.5) +
labs(
title = "Transfer Accuracy by Train Re-clicks",
x = "Re-clicks",
y = test_labels[ctx],
) +
scale_colour_brewer(
palette = "Greens",
) +
theme(
panel.background = element_rect(fill = "white", colour = "white"),
plot.background = element_rect(fill = "white", colour = "white")
)
test_labels <- c("Full Transfer Accuracy", "Partial Transfer Accuracy")
stereo_test %>%
filter(ses == 2, context_test == ctx) %>%
ggplot() +
geom_point(
aes(
x = reclicks,
y = accuracy
),
alpha = 0.8,
size = 15
) +
geom_text(
aes(
x = reclicks,
y = accuracy,
label = sub
),
alpha = 0.8,
size = 8,
position = position_jitter(width = 0.1, height = 0.05)
) +
theme_minimal(base_size = label_sz, base_family = "Roboto") +
ylim(0, 1.1) +
xlim(0, 8.5) +
labs(
title = "Transfer Accuracy by Train Re-clicks",
x = "Re-clicks",
y = test_labels[ctx],
) +
scale_colour_brewer(
palette = "Greens",
) +
theme(
panel.background = element_rect(fill = "white", colour = "white"),
plot.background = element_rect(fill = "white", colour = "white")
)
debugSource("~/Documents/academe/projects/doors/src-stereo/plot_stereo.R", echo=TRUE)
View(stereo_test)
source("~/Documents/academe/projects/doors/src-stereo/plot_stereo.R", echo=TRUE)
reclicks_avg
tmp <- stereo_test %>%
filter(ses == 2, context_test == ctx)
tmp
tmp$reclicks <- reclicks_avg
View(tmp)
View(stereo_test)
stereo_test <-
stereo %>%
group_by(sub, ses, context) %>%
summarise_all(mean)
stereo_test$accuracy_test <-
avg %>%
filter(ses == 3, switch == 0) %>%
pull(accuracy) # add test accuracy to stereo results
stereo_test$context_test <-
avg %>%
filter(ses==3, switch==0) %>%
pull(context)
tmp <- stereo_test %>%
group_by(sub,ses) %>%
summarise_all(mean)
reclicks_avg <- tmp %>% pull(reclicks)
overshoot_avg <- tmp %>% pull(overshoot_hp)
a <- stereo_test %>%
filter(ses == 2,context_test==1) %>%
select(sub,overshoot_hp,reclicks,accuracy_test,context_test)
a$reclicks <- reclicks_avg
a$overshoot_hp <- overshoot_avg
b <- stereo_test %>%
filter(ses==2, context_test==2) %>%
select(sub,overshoot_hp,reclicks,accuracy_test,context_test)
b$reclicks <- reclicks_avg
b$overshoot_hp <- overshoot_avg
stereo_test <- bind_rows(a,b)
View(stereo_test)
a <- stereo_test %>%
filter(ses == 2,context_test==1) %>%
ungroup() %>%
select(sub,overshoot_hp,reclicks,accuracy_test,context_test)
a$reclicks <- reclicks_avg
a$overshoot_hp <- overshoot_avg
b <- stereo_test %>%
filter(ses==2, context_test==2) %>%
ungroup() %>%
select(sub,overshoot_hp,reclicks,accuracy_test,context_test)
b$reclicks <- reclicks_avg
b$overshoot_hp <- overshoot_avg
stereo_test <- bind_rows(a,b)
View(stereo_test)
source("~/Documents/academe/projects/doors/src-stereo/plot_stereo.R", echo=TRUE)
source("~/Documents/academe/projects/doors/src-stereo/plot_stereo.R", echo=TRUE)
source("~/Documents/academe/projects/doors/src-stereo/plot_stereo.R", echo=TRUE)
source("~/Documents/academe/projects/doors/src-stereo/plot_stereo.R", echo=TRUE)
source("~/Documents/academe/projects/doors/src-stereo/plot_stereo.R", echo=TRUE)
source("~/Documents/academe/projects/doors/src-stereo/plot_stereo.R", echo=TRUE)
### sources
library(tidyverse)
library(ggthemes)
library(ggExtra)
### settings
version <-
"study-01" # pilot-data-00 (train and test), pilot-data-01 (learn and train), pilot-data-02 (learn and train, learn phase split into two parts)
exp <-
"exp_lt" # experiment: 'exp_ts' (task-switching) or 'exp_lt' (learning transfer)
mes <-
"clicks" # measure: 'clicks' or 'hovers'. usually want 'clicks'.
# figure settings
title_sz <- 30
label_sz <- 30
### paths
project_path <- getwd()
data_path <- file.path(project_path, "res")
if (!dir.exists(data_path)) {
stop(paste0(data_path, " does not exist"))
}
### data
# stereotypy measures from train phase
fnl <-
file.path(project_path, "res", paste(paste(version, exp, mes, "stereotypy", sep = "_"), ".csv",
sep = ""
))
stereo <- read_csv(fnl, show_col_types = FALSE)
# general accuracy and response times for all phases
fnl <-
file.path(project_path, "res", paste(paste(version, exp, mes, "avg", sep = "_"), ".csv",
sep = ""
))
avg <- read_csv(fnl)
# add test phase accuracy to stereo data frame
stereo_test <-
stereo %>%
group_by(sub, ses, context) %>%
summarise_all(mean)
stereo_test$accuracy_test <-
avg %>%
filter(ses == 3, switch == 0) %>%
pull(accuracy) # add test accuracy to stereo results
stereo_test$context_test <-
avg %>%
filter(ses==3, switch==0) %>%
pull(context)
tmp <- stereo_test %>%
group_by(sub,ses) %>%
summarise_all(mean)
reclicks_avg <- tmp %>% pull(reclicks)
overshoot_avg <- tmp %>% pull(overshoot_tsp)
a <- stereo_test %>%
filter(ses == 2,context_test==1) %>%
ungroup() %>%
select(sub,overshoot_tsp,reclicks,accuracy_test,context_test)
a$reclicks <- reclicks_avg
a$overshoot_tsp <- overshoot_avg
b <- stereo_test %>%
filter(ses==2, context_test==2) %>%
ungroup() %>%
select(sub,overshoot_tsp,reclicks,accuracy_test,context_test)
b$reclicks <- reclicks_avg
b$overshoot_tsp <- overshoot_avg
stereo_test <- bind_rows(a,b)
test_labels <- c("Full Transfer Accuracy", "Partial Transfer Accuracy")
p <- stereo_test %>%
ggplot() +
geom_point(aes(x = overshoot_tsp, y = accuracy_test,
colour = factor(context_test)),
alpha = 0.8,
size = 15
) +
geom_text(
aes(
x = overshoot_tsp,
y = accuracy_test, label = sub
),
alpha = 0.8,
size = 8,
position = position_jitter(width = 0.1, height = 0.05)
) +
theme_minimal(base_size = label_sz, base_family = "Roboto") +
ylim(0.5, 1.1) +
xlim(-0.1, 2.1) +
labs(
title = "Train Overshoot by Test Accuracy",
x = "Path Overshoot", y = "Accuracy", colour = "Test Type"
) +
scale_colour_brewer(
palette = "Greens",
labels = c("Full Transfer","Partial Transfer")
) +
theme(
panel.background = element_rect(fill = "white", colour = "white"),
plot.background = element_rect(fill = "white", colour = "white")
)
fnl <-
file.path(project_path, "fig", paste(paste(
version, exp, mes, "tsp",
sep = "_"
), ".png", sep = ""))
ggsave(fnl, plot = p, width = 14, height = 7)
