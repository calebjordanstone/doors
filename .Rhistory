exp <- "exp_ts" # experiment: 'exp_ts' (task-switching) or 'exp_lt' (learning transfer)
# -------------------------------------------------------------------------
# load data
fnl <- file.path(project_path, "res", paste(paste(exp, "evt", sep = "_"), ".csv", sep = ""))
data <- read.csv(fnl)
# -------------------------------------------------------------------------
# loop through participants and contexts
routineness <- data.frame()
for (sid in unique(data$sub)){
print(sprintf('subject %d', sid))
for (ctx in unique(data$context)){
# get their train phase data, context-correct stay trial clicks only
clicks <- data %>% filter(sub==sid,ses==2,context==ctx,door_cc==1,switch==0)
counts <- count_paths(clicks)
tmp <- make_dirichlet(counts)
routineness <- rbind(routineness,cbind(sub=sid,context=ctx,train_type=unique(clicks$train_type),tmp))
}
}
# lydia barnes, september 2024
# reads and formats click data
# converts click data to count data for each of six possible paths
# generates dirichlet distribution from path count data
# extracts parameters and estimates entropy (our routineness measure)
rm(list=ls())
library(tidyverse)
source(file.path("src-dirich", "count_paths.R"))
source(file.path("src-dirich", "make_dirichlet.R"))
project_path <- getwd()
exp <- "exp_ts" # experiment: 'exp_ts' (task-switching) or 'exp_lt' (learning transfer)
# -------------------------------------------------------------------------
# load data
fnl <- file.path(project_path, "res", paste(paste(exp, "evt", sep = "_"), ".csv", sep = ""))
data <- read.csv(fnl)
# -------------------------------------------------------------------------
# loop through participants and contexts
routineness <- data.frame()
for (sid in unique(data$sub)){
print(sprintf('subject %d', sid))
for (ctx in unique(data$context)){
# get their train phase data, context-correct stay trial clicks only
clicks <- data %>% filter(sub==sid,ses==2,context==ctx,door_cc==1,switch==0)
counts <- count_paths(clicks)
tmp <- make_dirichlet(counts)
routineness <- rbind(routineness,cbind(sub=sid,context=ctx,train_type=unique(clicks$train_type),tmp))
}
}
# lydia barnes, september 2024
# reads and formats click data
# converts click data to count data for each of six possible paths
# generates dirichlet distribution from path count data
# extracts parameters and estimates entropy (our routineness measure)
rm(list=ls())
library(tidyverse)
source(file.path("src-dirich", "count_paths.R"))
source(file.path("src-dirich", "make_dirichlet.R"))
project_path <- getwd()
exp <- "exp_ts" # experiment: 'exp_ts' (task-switching) or 'exp_lt' (learning transfer)
# -------------------------------------------------------------------------
# load data
fnl <- file.path(project_path, "res", paste(paste(exp, "evt", sep = "_"), ".csv", sep = ""))
data <- read.csv(fnl)
# -------------------------------------------------------------------------
# loop through participants and contexts
routineness <- data.frame()
for (sid in unique(data$sub)){
print(sprintf('subject %d', sid))
for (ctx in unique(data$context)){
# get their train phase data, context-correct stay trial clicks only
clicks <- data %>% filter(sub==sid,ses==2,context==ctx,door_cc==1,switch==0)
counts <- count_paths(clicks)
tmp <- make_dirichlet(counts)
routineness <- rbind(routineness,cbind(sub=sid,context=ctx,train_type=unique(clicks$train_type),tmp))
}
}
fnl <- file.path(project_path, "res", paste(paste(exp, "routines", sep = "_"), ".csv", sep = ""))
write_csv(routineness, fnl)
rm(list=ls())
library(tidyverse)
source(file.path("src-dirich", "count_paths.R"))
source(file.path("src-dirich", "make_dirichlet.R"))
project_path <- getwd()
exp <- "exp_ts" # experiment: 'exp_ts' (task-switching) or 'exp_lt' (learning transfer)
# -------------------------------------------------------------------------
# load data
fnl <- file.path(project_path, "res", paste(paste(exp, "evt", sep = "_"), ".csv", sep = ""))
data <- read.csv(fnl)
# -------------------------------------------------------------------------
# loop through participants and contexts
routineness <- data.frame()
for (sid in unique(data$sub)){
print(sprintf('subject %d', sid))
for (ctx in unique(data$context)){
# get their train phase data, context-correct stay trial clicks only
clicks <- data %>% filter(sub==sid,ses==2,context==ctx,door_cc==1,switch==0)
counts <- count_paths(clicks)
tmp <- make_dirichlet(counts)
routineness <- rbind(routineness,cbind(sub=sid,context=ctx,train_type=unique(clicks$train_type),tmp))
}
}
# define the six possible paths, assuming that people loop, so we can ignore start point
routines <- list(c(1,2,3,4),c(1,2,4,3),c(1,3,2,4),c(1,3,4,2),c(1,4,2,3),c(1,4,3,2))
#find their context-correct doors, and re-name them [1 2 3 4]
doors <- clicks %>% pull(door) %>% unique
a <- c(doors[!is.na(match(doors,c(1,2,5,6)))],
doors[!is.na(match(doors,c(9,10,13,14)))],
doors[!is.na(match(doors,c(11,12,15,16)))],
doors[!is.na(match(doors,c(3,4,7,8)))])
clicks <- clicks %>% mutate(door_id = case_when(door==a[1]~1,door==a[2]~2,door==a[3]~3,door==a[4]~4))
View(clicks)
View(clicks)
start_point = "favourite"
favourite <- clicks %>%
mutate(t_diff = diff(c(0,t))) %>%
filter(t_diff == 1, door_cc == 1) %>%
pull(door) %>%
mode
favourite <- clicks %>%
mutate(t_diff = diff(c(0,t))) %>%
filter(t_diff == 1, door_cc == 1) %>%
pull(door) %>%
mode()
favourite <- clicks %>%
mutate(t_diff = diff(c(0,t))) %>%
filter(t_diff == 1, door_cc == 1) %>%
pull(door)
favourite
mode(favourite)
Mode(favourite)
favourite==3
which(favourite==3)
length(which(favourite==3))
length(which(favourite==1))
length(which(favourite==11))
length(which(favourite==9))
favourite <- clicks %>%
mutate(t_diff = diff(c(0,t))) %>%
filter(t_diff == 1, door_cc == 1) %>%
pull(door) %>%
Mode
clicks %>%
mutate(t_diff = diff(c(0,t))) %>%
filter(t_diff == 1, door_cc == 1) %>%
pull(door) %>%
Mode
doors[is.na(match(doors,favourite))
]
c(doors[!is.na(match(doors,favourite))], doors[is.na(match(doors,favourite))])
rm(list=ls())
library(tidyverse)
source(file.path("src-dirich", "count_paths.R"))
source(file.path("src-dirich", "make_dirichlet.R"))
project_path <- getwd()
exp <- "exp_ts" # experiment: 'exp_ts' (task-switching) or 'exp_lt' (learning transfer)
start_point = "favourite"
# -------------------------------------------------------------------------
# load data
fnl <- file.path(project_path, "res", paste(paste(exp, "evt", sep = "_"), ".csv", sep = ""))
data <- read.csv(fnl)
# -------------------------------------------------------------------------
# loop through participants and contexts
routineness <- data.frame()
for (sid in unique(data$sub)){
print(sprintf('subject %d', sid))
for (ctx in unique(data$context)){
# get their train phase data, context-correct stay trial clicks only
clicks <- data %>% filter(sub==sid,ses==2,context==ctx,door_cc==1,switch==0)
counts <- count_paths(clicks)
tmp <- make_dirichlet(counts)
routineness <- rbind(routineness,cbind(sub=sid,context=ctx,train_type=unique(clicks$train_type),tmp))
}
}
clicks_used <- data.frame()
routineness <- data.frame()
for (sid in unique(data$sub)){
print(sprintf('subject %d', sid))
for (ctx in unique(data$context)){
# get their train phase data, context-correct stay trial clicks only
clicks <- data %>% filter(sub==sid,ses==2,context==ctx,door_cc==1,switch==0)
counts <- count_paths(clicks)
clicks_used <- rbind(clicks_used, cbind(clicks = nrow(clicks), used = sum(counts)*4))
tmp <- make_dirichlet(counts)
routineness <- rbind(routineness,cbind(sub=sid,context=ctx,train_type=unique(clicks$train_type),tmp))
}
}
# -------------------------------------------------------------------------
# loop through participants and contexts
clicks_used <- data.frame()
routineness <- data.frame()
for (sid in unique(data$sub)){
print(sprintf('subject %d', sid))
for (ctx in unique(data$context)){
# get their train phase data, context-correct stay trial clicks only
clicks <- data %>% filter(sub==sid,ses==2,context==ctx,door_cc==1,switch==0)
counts <- count_paths(clicks)
clicks_used <- rbind(clicks_used, cbind(clicks = nrow(clicks), used = sum(counts)*4))
tmp <- make_dirichlet(counts)
routineness <- rbind(routineness,cbind(sub=sid,context=ctx,train_type=unique(clicks$train_type),tmp))
}
}
rm(list=ls())
library(tidyverse)
source(file.path("src-dirich", "count_paths.R"))
source(file.path("src-dirich", "make_dirichlet.R"))
project_path <- getwd()
exp <- "exp_ts" # experiment: 'exp_ts' (task-switching) or 'exp_lt' (learning transfer)
start_point = "favourite"
# -------------------------------------------------------------------------
# load data
fnl <- file.path(project_path, "res", paste(paste(exp, "evt", sep = "_"), ".csv", sep = ""))
data <- read.csv(fnl)
# -------------------------------------------------------------------------
# loop through participants and contexts
clicks_used <- data.frame()
routineness <- data.frame()
for (sid in unique(data$sub)){
print(sprintf('subject %d', sid))
for (ctx in unique(data$context)){
# get their train phase data, context-correct stay trial clicks only
clicks <- data %>% filter(sub==sid,ses==2,context==ctx,door_cc==1,switch==0)
counts <- count_paths(clicks)
clicks_used <- rbind(clicks_used, cbind(clicks = nrow(clicks), used = sum(counts)*4))
tmp <- make_dirichlet(counts)
routineness <- rbind(routineness,cbind(sub=sid,context=ctx,train_type=unique(clicks$train_type),tmp))
}
}
# define the six possible paths, assuming that people loop, so we can ignore start point
routines <- list(c(1,2,3,4),c(1,2,4,3),c(1,3,2,4),c(1,3,4,2),c(1,4,2,3),c(1,4,3,2))
start_point
doors <- clicks %>% pull(door) %>% unique
# opt 2: let them start in their favourite spot
favourite <- clicks %>%
mutate(t_diff = diff(c(0,t))) %>%
filter(t_diff == 1, door_cc == 1) %>%
pull(door) %>%
Mode
a <- c(doors[!is.na(match(doors,favourite))], doors[is.na(match(doors,favourite))])
clicks <- clicks %>% mutate(door_id = case_when(door==a[1]~1,door==a[2]~2,door==a[3]~3,door==a[4]~4))
# through a sliding window of four unique clicks, count which of these it maps onto
counts <- matrix(0,length(routines))
click <- 1
while (click < nrow(clicks)-4){
# find the clicks that land on the top left door
if(clicks$door_id[click]==1){
# store information about that click
sample <- clicks[click,]
# hunt for the next three UNIQUE clicks
idx <- click
while(nrow(sample)<4){
if(is.na(match(clicks$door_id[idx],sample$door_id))){
sample <- rbind(sample,clicks[idx,])
}else if (idx == nrow(clicks)){
break
}
idx <- idx+1
}
click <- idx
# compare to the six possible routines
routine <- which(sapply(routines, function(x,y) all(x==y) , y=sample$door_id))
counts[routine] <- counts[routine]+1
}else{
click <- click+1
}
}
counts <- data.frame(counts)
counts$r <- paste("r", 1:nrow(counts), sep="")
return(counts)
clicks_used <- rbind(clicks_used, cbind(clicks = nrow(clicks), used = sum(counts)*4))
clicks = nrow(clicks)
used = sum(counts)*4
sum(counts)
sum(counts$counts)
sum(counts$counts)*4
nrow(clicks)
# lydia barnes, september 2024
# reads and formats click data
# converts click data to count data for each of six possible paths
# generates dirichlet distribution from path count data
# extracts parameters and estimates entropy (our routineness measure)
rm(list=ls())
library(tidyverse)
source(file.path("src-dirich", "count_paths.R"))
source(file.path("src-dirich", "make_dirichlet.R"))
project_path <- getwd()
exp <- "exp_ts" # experiment: 'exp_ts' (task-switching) or 'exp_lt' (learning transfer)
start_point = "favourite"
# -------------------------------------------------------------------------
# load data
fnl <- file.path(project_path, "res", paste(paste(exp, "evt", sep = "_"), ".csv", sep = ""))
data <- read.csv(fnl)
# -------------------------------------------------------------------------
# loop through participants and contexts
clicks_used <- data.frame()
routineness <- data.frame()
for (sid in unique(data$sub)){
print(sprintf('subject %d', sid))
for (ctx in unique(data$context)){
# get their train phase data, context-correct stay trial clicks only
clicks <- data %>% filter(sub==sid,ses==2,context==ctx,door_cc==1,switch==0)
counts <- count_paths(clicks)
clicks_used <- rbind(clicks_used, cbind(nclicks = nrow(clicks), used = sum(counts$counts)*4))
tmp <- make_dirichlet(counts)
routineness <- rbind(routineness,cbind(sub=sid,context=ctx,train_type=unique(clicks$train_type),tmp))
}
}
fnl <- file.path(project_path, "res", paste(paste(exp, "routines", sep = "_"), ".csv", sep = ""))
write_csv(routineness, fnl)
View(clicks_used)
print(sprintf('avg. missed clicks = %.2f', clicks_used %>% mutate(missed = nclicks - used) %>% pull(missed) %>% mean))
rm(list=ls())
library(tidyverse)
source(file.path("src-dirich", "count_paths.R"))
source(file.path("src-dirich", "make_dirichlet.R"))
project_path <- getwd()
exp <- "exp_ts" # experiment: 'exp_ts' (task-switching) or 'exp_lt' (learning transfer)
start_point = "fixed" # where to start counting each routine. "fixed" (top-left for everyone) or "favourite" (each person's preferred trial start point)
# -------------------------------------------------------------------------
# load data
fnl <- file.path(project_path, "res", paste(paste(exp, "evt", sep = "_"), ".csv", sep = ""))
data <- read.csv(fnl)
# -------------------------------------------------------------------------
# loop through participants and contexts
clicks_used <- data.frame()
routineness <- data.frame()
for (sid in unique(data$sub)){
print(sprintf('subject %d', sid))
for (ctx in unique(data$context)){
# get their train phase data, context-correct stay trial clicks only
clicks <- data %>% filter(sub==sid,ses==2,context==ctx,door_cc==1,switch==0)
counts <- count_paths(clicks, start_point)
clicks_used <- rbind(clicks_used, cbind(nclicks = nrow(clicks), used = sum(counts$counts)*4))
tmp <- make_dirichlet(counts)
routineness <- rbind(routineness,cbind(sub=sid,context=ctx,train_type=unique(clicks$train_type),tmp))
}
}
print(sprintf('avg. missed clicks = %.2f', clicks_used %>% mutate(missed = nclicks - used) %>% pull(missed) %>% mean))
# lydia barnes, september 2024
# reads and formats click data
# converts click data to count data for each of six possible paths
# generates dirichlet distribution from path count data
# extracts parameters and estimates entropy (our routineness measure)
rm(list=ls())
library(tidyverse)
source(file.path("src-dirich", "count_paths.R"))
source(file.path("src-dirich", "make_dirichlet.R"))
project_path <- getwd()
exp <- "exp_ts" # experiment: 'exp_ts' (task-switching) or 'exp_lt' (learning transfer)
start_point = "favourite" # where to start counting each routine. "fixed" (top-left for everyone) or "favourite" (each person's preferred trial start point)
# -------------------------------------------------------------------------
# load data
fnl <- file.path(project_path, "res", paste(paste(exp, "evt", sep = "_"), ".csv", sep = ""))
data <- read.csv(fnl)
# -------------------------------------------------------------------------
# loop through participants and contexts
clicks_used <- data.frame()
routineness <- data.frame()
for (sid in unique(data$sub)){
print(sprintf('subject %d', sid))
for (ctx in unique(data$context)){
# get their train phase data, context-correct stay trial clicks only
clicks <- data %>% filter(sub==sid,ses==2,context==ctx,door_cc==1,switch==0)
counts <- count_paths(clicks, start_point)
clicks_used <- rbind(clicks_used, cbind(nclicks = nrow(clicks), used = sum(counts$counts)*4))
tmp <- make_dirichlet(counts)
routineness <- rbind(routineness,cbind(sub=sid,context=ctx,train_type=unique(clicks$train_type),tmp))
}
}
print(sprintf('avg. missed clicks = %.2f', clicks_used %>% mutate(missed = nclicks - used) %>% pull(missed) %>% mean))
fnl <- file.path(project_path, "res", paste(paste(exp, "routines", sep = "_"), ".csv", sep = ""))
write_csv(routineness, fnl)
View(routineness)
# lydia barnes, september 2024
# reads and formats click data
# converts click data to count data for each of six possible paths
# generates dirichlet distribution from path count data
# extracts parameters and estimates entropy (our routineness measure)
rm(list=ls())
library(tidyverse)
source(file.path("src-dirich", "count_paths.R"))
source(file.path("src-dirich", "make_dirichlet.R"))
project_path <- getwd()
exp <- "exp_ts" # experiment: 'exp_ts' (task-switching) or 'exp_lt' (learning transfer)
start_point = "favourite" # where to start counting each routine. "fixed" (top-left for everyone) or "favourite" (each person's preferred trial start point)
# -------------------------------------------------------------------------
# load data
fnl <- file.path(project_path, "res", paste(paste(exp, "evt", sep = "_"), ".csv", sep = ""))
data <- read.csv(fnl)
# -------------------------------------------------------------------------
# loop through participants and contexts
routineness <- data.frame()
for (sid in unique(data$sub)){
print(sprintf('subject %d', sid))
for (ctx in unique(data$context)){
# get their train phase data, context-correct stay trial clicks only
clicks <- data %>% filter(sub==sid,ses==2,context==ctx,door_cc==1,switch==0)
counts <- count_paths(clicks, start_point)
tmp <- make_dirichlet(counts)
routineness <- rbind(routineness,cbind(sub=sid,context=ctx,train_type=unique(clicks$train_type),
nclicks_avail=nrow(clicks),nclicks_used=sum(counts$counts)*4,tmp))
}
}
print(sprintf('avg. missed clicks = %.2f', routineness %>% mutate(missed = nclicks_avail - nclicks_used) %>% pull(missed) %>% mean))
fnl <- file.path(project_path, "res", paste(paste(exp, "routines", sep = "_"), ".csv", sep = ""))
write_csv(routineness, fnl)
View(routineness)
source("~/Documents/academe/projects/doors/src-dirich/run_dirichlet.R", echo=TRUE)
# lydia barnes, september 2024
# reads and formats click data
# converts click data to count data for each of six possible paths
# generates dirichlet distribution from path count data
# extracts parameters and estimates entropy (our routineness measure)
# -------------------------------------------------------------------------
# load resources and set parameters
rm(list=ls())
library(tidyverse)
source(file.path("src-dirich", "count_paths.R"))
source(file.path("src-dirich", "make_dirichlet.R"))
project_path <- getwd()
exp <- "exp_ts" # experiment: 'exp_ts' (task-switching) or 'exp_lt' (learning transfer)
start_point = "favourite" # where to start counting each routine. "fixed" (top-left for everyone) or "favourite" (each person's preferred trial start point)
# -------------------------------------------------------------------------
# load data
fnl <- file.path(project_path, "res", paste(paste(exp, "evt", sep = "_"), ".csv", sep = ""))
data <- read.csv(fnl)
# -------------------------------------------------------------------------
# loop through participants and contexts
routineness <- data.frame()
for (sid in unique(data$sub)){
print(sprintf('subject %d', sid))
for(ss in unique(data)){
for (ctx in unique(data$context)){
clicks <- data %>% filter(sub==sid,ses==ss,context==ctx,door_cc==1,switch==0) # get context-correct stay trial clicks only
counts <- count_paths(clicks, start_point)
tmp <- make_dirichlet(counts)
routineness <- rbind(routineness,cbind(sub=sid,ses=ss,context=ctx,train_type=unique(clicks$train_type),
nclicks_avail=nrow(clicks),nclicks_used=sum(counts$counts)*4,tmp))
}
}
}
# lydia barnes, september 2024
# reads and formats click data
# converts click data to count data for each of six possible paths
# generates dirichlet distribution from path count data
# extracts parameters and estimates entropy (our routineness measure)
# -------------------------------------------------------------------------
# load resources and set parameters
rm(list=ls())
library(tidyverse)
source(file.path("src-dirich", "count_paths.R"))
source(file.path("src-dirich", "make_dirichlet.R"))
project_path <- getwd()
exp <- "exp_ts" # experiment: 'exp_ts' (task-switching) or 'exp_lt' (learning transfer)
start_point = "favourite" # where to start counting each routine. "fixed" (top-left for everyone) or "favourite" (each person's preferred trial start point)
# -------------------------------------------------------------------------
# load data
fnl <- file.path(project_path, "res", paste(paste(exp, "evt", sep = "_"), ".csv", sep = ""))
data <- read.csv(fnl)
# -------------------------------------------------------------------------
# loop through participants and contexts
routineness <- data.frame()
for (sid in unique(data$sub)){
print(sprintf('subject %d', sid))
for(ss in unique(data)){
for (ctx in unique(data$context)){
clicks <- data %>% filter(sub==sid,ses==ss,context==ctx,door_cc==1,switch==0) # get context-correct stay trial clicks only
counts <- count_paths(clicks, start_point)
tmp <- make_dirichlet(counts)
routineness <- rbind(routineness,cbind(sub=sid,ses=ss,context=ctx,train_type=unique(clicks$train_type),
nclicks_avail=nrow(clicks),nclicks_used=sum(counts$counts)*4,tmp))
}
}
}
# lydia barnes, september 2024
# reads and formats click data
# converts click data to count data for each of six possible paths
# generates dirichlet distribution from path count data
# extracts parameters and estimates entropy (our routineness measure)
# -------------------------------------------------------------------------
# load resources and set parameters
rm(list=ls())
library(tidyverse)
source(file.path("src-dirich", "count_paths.R"))
source(file.path("src-dirich", "make_dirichlet.R"))
project_path <- getwd()
exp <- "exp_ts" # experiment: 'exp_ts' (task-switching) or 'exp_lt' (learning transfer)
start_point = "favourite" # where to start counting each routine. "fixed" (top-left for everyone) or "favourite" (each person's preferred trial start point)
# -------------------------------------------------------------------------
# load data
fnl <- file.path(project_path, "res", paste(paste(exp, "evt", sep = "_"), ".csv", sep = ""))
data <- read.csv(fnl)
# -------------------------------------------------------------------------
# loop through participants and contexts
routineness <- data.frame()
for (sid in unique(data$sub)){
print(sprintf('subject %d', sid))
for(ss in unique(data$ses)){
for (ctx in unique(data$context)){
clicks <- data %>% filter(sub==sid,ses==ss,context==ctx,door_cc==1,switch==0) # get context-correct stay trial clicks only
counts <- count_paths(clicks, start_point)
tmp <- make_dirichlet(counts)
routineness <- rbind(routineness,cbind(sub=sid,ses=ss,context=ctx,train_type=unique(clicks$train_type),
nclicks_avail=nrow(clicks),nclicks_used=sum(counts$counts)*4,tmp))
}
}
}
# -------------------------------------------------------------------------
# check how much data we were able to use
#   we only use sets of four unique clicks for the modelling above, i.e. [1 2 1 2 3 4] counts as [1 2 . . 3 4]
print(sprintf('avg. missed clicks = %.2f', routineness %>% mutate(missed = nclicks_avail - nclicks_used) %>% pull(missed) %>% mean))
# -------------------------------------------------------------------------
# save the data
fnl <- file.path(project_path, "res", paste(paste(exp, "routines", sep = "_"), ".csv", sep = ""))
write_csv(routineness, fnl)
