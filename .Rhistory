xlim(
0.5,
4.5
) +
scale_fill_gradientn(colours = colours, guide = "none") +
scale_color_discrete(guide = "none") +
labs(
title = sprintf("Context %d",ctx), x = "Door Position (x)",
y = "Door Position (y)",
) +
theme(
plot.title = element_text(size = title_sz), axis.text.x = element_text(size = label_sz),
axis.text.y = element_text(size = label_sz), legend.text = element_text(size = label_sz), axis.title.x = element_text(size = label_sz),
axis.title.y = element_text(size = label_sz), legend.title = element_text(size = label_sz)
)
if (ctx==1){a <- tmp}else{b <- tmp}
}
# make multi-panel
ggarrange(a,b)
# save it
fnl <- file.path(project_path, "fig", paste( paste(version, exp, mes, alg, sep = "_"), ".png", sep = ""))
ggsave(fnl, plot = last_plot())
}
# -------------------------------------------------------------------------
# plot
for (alg in algs){
for (ctx in contexts){
# filter to just this subject, context, and algorithm
opt <- optimal %>%
filter(sub %% 4 ==0, solution == 1, algorithm == alg, context == ctx) %>%
#mutate(solution_factor = factor(solution)) %>%
mutate(sub_factor = factor(sub))
# set grid colours based on current and other context
colours <- rep("white", 16)
#idx <- unique(opt$door)
#colours[idx] <- "lightgrey"
#opt_other <- optimal %>%
#  filter(algorithm == alg, context != ctx) %>%
#  #mutate(solution_factor = factor(solution)) %>%
#  mutate(sub_factor = factor(sub))
#idx <- unique(opt_other$door)
#colours[idx] <- "darkgrey"
# make the figure
# group = solution_factor,
tmp <- ggplot() +
geom_tile(
data = doors, aes(x = xloc, y = yloc, fill = id, colour = "white"), show.legend = FALSE,
width = 0.9, height = 0.9, alpha = 1, col = "black"
) +
geom_text(
data = doors, aes(x = xloc, y = yloc, label = id),
size = 10
) +
geom_path(
data = opt, aes(x = x, y = y, colour = sub_factor), linewidth = 2, linejoin = "mitre",
lineend = "butt", position = position_jitter(width = 0.1, height = 0.1), alpha = 1, arrow = arrow(
angle = 15,
type = "closed"
)
) +
theme_minimal() +
ylim(0.5, 4.5) +
xlim(
0.5,
4.5
) +
scale_fill_gradientn(colours = colours, guide = "none") +
scale_color_discrete(guide = "none") +
labs(
title = sprintf("Context %d",ctx), x = "Door Position (x)",
y = "Door Position (y)",
) +
theme(
plot.title = element_text(size = title_sz), axis.text.x = element_text(size = label_sz),
axis.text.y = element_text(size = label_sz), legend.text = element_text(size = label_sz), axis.title.x = element_text(size = label_sz),
axis.title.y = element_text(size = label_sz), legend.title = element_text(size = label_sz)
)
if (ctx==1){a <- tmp}else{b <- tmp}
}
# make multi-panel
ggarrange(a,b)
# save it
fnl <- file.path(project_path, "fig", paste( paste(version, exp, mes, alg, sep = "_"), ".png", sep = ""))
ggsave(fnl, plot = last_plot())
}
# filter to just this subject, context, and algorithm
opt <- optimal %>%
filter(algorithm == alg, context == ctx) %>%
mutate(solution_factor = factor(solution))
# set grid colours based on current and other context
colours <- rep("white", 16)
idx <- unique(opt$door)
colours[idx] <- "lightgrey"
opt_other <- optimal %>%
filter(sub == sid, algorithm == alg, context != ctx) %>%
mutate(solution_factor = factor(solution))
# filter to just this subject, context, and algorithm
opt <- optimal %>%
filter(algorithm == alg, context == ctx) %>%
mutate(solution_factor = factor(solution))
colours <- rep("white", 16)
# make the figure
tmp <- ggplot() +
geom_tile(
data = doors, aes(x = xloc, y = yloc, fill = id, colour = "white"), show.legend = FALSE,
width = 0.9, height = 0.9, alpha = 1, col = "black"
) +
geom_text(
data = doors, aes(x = xloc, y = yloc, label = id),
size = 10
) +
geom_path(
data = opt, aes(x = x, y = y, group = solution_factor), linewidth = 2, linejoin = "mitre",
lineend = "butt", position = position_jitter(width = 0.1, height = 0.1), alpha = 0.8, arrow = arrow(
angle = 15,
type = "closed"
)
) +
theme_minimal() +
ylim(0.5, 4.5) +
xlim(
0.5,
4.5
) +
scale_fill_gradientn(colours = colours, guide = "none") +
labs(
title = sprintf("Context %d",ctx), x = "Door Position (x)",
y = "Door Position (y)"
) +
theme(
plot.title = element_text(size = title_sz), axis.text.x = element_text(size = label_sz),
axis.text.y = element_text(size = label_sz), legend.text = element_text(size = label_sz), axis.title.x = element_text(size = label_sz),
axis.title.y = element_text(size = label_sz), legend.title = element_text(size = label_sz)
) +
facet_wrap(sub)
ggplot() +
geom_tile(
data = doors, aes(x = xloc, y = yloc, fill = id, colour = "white"), show.legend = FALSE,
width = 0.9, height = 0.9, alpha = 1, col = "black"
) +
geom_text(
data = doors, aes(x = xloc, y = yloc, label = id),
size = 10
) +
geom_path(
data = opt, aes(x = x, y = y, group = solution_factor), linewidth = 2, linejoin = "mitre",
lineend = "butt", position = position_jitter(width = 0.1, height = 0.1), alpha = 0.8, arrow = arrow(
angle = 15,
type = "closed"
)
) +
theme_minimal() +
ylim(0.5, 4.5) +
xlim(
0.5,
4.5
) +
scale_fill_gradientn(colours = colours, guide = "none") +
labs(
title = sprintf("Context %d",ctx), x = "Door Position (x)",
y = "Door Position (y)"
) +
theme(
plot.title = element_text(size = title_sz), axis.text.x = element_text(size = label_sz),
axis.text.y = element_text(size = label_sz), legend.text = element_text(size = label_sz), axis.title.x = element_text(size = label_sz),
axis.title.y = element_text(size = label_sz), legend.title = element_text(size = label_sz)
) +
facet_wrap(sub)
ggplot() +
geom_tile(
data = doors, aes(x = xloc, y = yloc, fill = id, colour = "white"), show.legend = FALSE,
width = 0.9, height = 0.9, alpha = 1, col = "black"
) +
geom_text(
data = doors, aes(x = xloc, y = yloc, label = id),
size = 10
) +
geom_path(
data = opt, aes(x = x, y = y, group = solution_factor), linewidth = 2, linejoin = "mitre",
lineend = "butt", position = position_jitter(width = 0.1, height = 0.1), alpha = 0.8, arrow = arrow(
angle = 15,
type = "closed"
)
) +
theme_minimal() +
ylim(0.5, 4.5) +
xlim(
0.5,
4.5
) +
scale_fill_gradientn(colours = colours, guide = "none") +
labs(
title = sprintf("Context %d",ctx), x = "Door Position (x)",
y = "Door Position (y)"
) +
theme(
plot.title = element_text(size = title_sz), axis.text.x = element_text(size = label_sz),
axis.text.y = element_text(size = label_sz), legend.text = element_text(size = label_sz), axis.title.x = element_text(size = label_sz),
axis.title.y = element_text(size = label_sz), legend.title = element_text(size = label_sz)
) +
facet_wrap(sub)
ggplot() +
geom_tile(
data = doors, aes(x = xloc, y = yloc, fill = id, colour = "white"), show.legend = FALSE,
width = 0.9, height = 0.9, alpha = 1, col = "black"
)
ggplot() +
geom_tile(
data = doors, aes(x = xloc, y = yloc, fill = id, colour = "white"), show.legend = FALSE,
width = 0.9, height = 0.9, alpha = 1, col = "black"
) +
geom_text(
data = doors, aes(x = xloc, y = yloc, label = id),
size = 10
)
ggplot() +
geom_tile(
data = doors, aes(x = xloc, y = yloc, fill = id, colour = "white"), show.legend = FALSE,
width = 0.9, height = 0.9, alpha = 1, col = "black"
) +
geom_text(
data = doors, aes(x = xloc, y = yloc, label = id),
size = 10
) +
geom_path(
data = opt, aes(x = x, y = y, group = solution_factor), linewidth = 2, linejoin = "mitre",
lineend = "butt", position = position_jitter(width = 0.1, height = 0.1), alpha = 0.8, arrow = arrow(
angle = 15,
type = "closed"
)
)
ggplot() +
geom_tile(
data = doors, aes(x = xloc, y = yloc, fill = id, colour = "white"), show.legend = FALSE,
width = 0.9, height = 0.9, alpha = 1, col = "black"
) +
geom_text(
data = doors, aes(x = xloc, y = yloc, label = id),
size = 10
) +
geom_path(
data = opt, aes(x = x, y = y, group = solution_factor), linewidth = 2, linejoin = "mitre",
lineend = "butt", position = position_jitter(width = 0.1, height = 0.1), alpha = 0.8, arrow = arrow(
angle = 15,
type = "closed"
)
) +
theme_minimal() +
ylim(0.5, 4.5) +
xlim(
0.5,
4.5
)
ggplot() +
geom_tile(
data = doors, aes(x = xloc, y = yloc, fill = id, colour = "white"), show.legend = FALSE,
width = 0.9, height = 0.9, alpha = 1, col = "black"
) +
geom_text(
data = doors, aes(x = xloc, y = yloc, label = id),
size = 10
) +
geom_path(
data = opt, aes(x = x, y = y, group = solution_factor), linewidth = 2, linejoin = "mitre",
lineend = "butt", position = position_jitter(width = 0.1, height = 0.1), alpha = 0.8, arrow = arrow(
angle = 15,
type = "closed"
)
) +
theme_minimal() +
ylim(0.5, 4.5) +
xlim(
0.5,
4.5
) +
scale_fill_gradientn(colours = colours, guide = "none") +
labs(
title = sprintf("Context %d",ctx), x = "Door Position (x)",
y = "Door Position (y)"
)
ggplot() +
geom_tile(
data = doors, aes(x = xloc, y = yloc, fill = id, colour = "white"), show.legend = FALSE,
width = 0.9, height = 0.9, alpha = 1, col = "black"
) +
geom_text(
data = doors, aes(x = xloc, y = yloc, label = id),
size = 10
) +
geom_path(
data = opt, aes(x = x, y = y, group = solution_factor), linewidth = 2, linejoin = "mitre",
lineend = "butt", position = position_jitter(width = 0.1, height = 0.1), alpha = 0.8, arrow = arrow(
angle = 15,
type = "closed"
)
) +
theme_minimal() +
ylim(0.5, 4.5) +
xlim(
0.5,
4.5
) +
scale_fill_gradientn(colours = colours, guide = "none") +
labs(
title = sprintf("Context %d",ctx), x = "Door Position (x)",
y = "Door Position (y)"
) +
theme(
plot.title = element_text(size = title_sz), axis.text.x = element_text(size = label_sz),
axis.text.y = element_text(size = label_sz), legend.text = element_text(size = label_sz), axis.title.x = element_text(size = label_sz),
axis.title.y = element_text(size = label_sz), legend.title = element_text(size = label_sz)
)
ggplot() +
geom_tile(
data = doors, aes(x = xloc, y = yloc, fill = id, colour = "white"), show.legend = FALSE,
width = 0.9, height = 0.9, alpha = 1, col = "black"
) +
geom_text(
data = doors, aes(x = xloc, y = yloc, label = id),
size = 10
) +
geom_path(
data = opt, aes(x = x, y = y, group = solution_factor), linewidth = 2, linejoin = "mitre",
lineend = "butt", position = position_jitter(width = 0.1, height = 0.1), alpha = 0.8, arrow = arrow(
angle = 15,
type = "closed"
)
) +
theme_minimal() +
ylim(0.5, 4.5) +
xlim(
0.5,
4.5
) +
scale_fill_gradientn(colours = colours, guide = "none") +
labs(
title = sprintf("Context %d",ctx), x = "Door Position (x)",
y = "Door Position (y)"
) +
theme(
plot.title = element_text(size = title_sz), axis.text.x = element_text(size = label_sz),
axis.text.y = element_text(size = label_sz), legend.text = element_text(size = label_sz), axis.title.x = element_text(size = label_sz),
axis.title.y = element_text(size = label_sz), legend.title = element_text(size = label_sz)
) +
facet_wrap(data$sub)
ggplot() +
geom_tile(
data = doors, aes(x = xloc, y = yloc, fill = id, colour = "white"), show.legend = FALSE,
width = 0.9, height = 0.9, alpha = 1, col = "black"
) +
geom_text(
data = doors, aes(x = xloc, y = yloc, label = id),
size = 10
) +
geom_path(
data = opt, aes(x = x, y = y, group = solution_factor), linewidth = 2, linejoin = "mitre",
lineend = "butt", position = position_jitter(width = 0.1, height = 0.1), alpha = 0.8, arrow = arrow(
angle = 15,
type = "closed"
)
) +
theme_minimal() +
ylim(0.5, 4.5) +
xlim(
0.5,
4.5
) +
scale_fill_gradientn(colours = colours, guide = "none") +
labs(
title = sprintf("Context %d",ctx), x = "Door Position (x)",
y = "Door Position (y)"
) +
theme(
plot.title = element_text(size = title_sz), axis.text.x = element_text(size = label_sz),
axis.text.y = element_text(size = label_sz), legend.text = element_text(size = label_sz), axis.title.x = element_text(size = label_sz),
axis.title.y = element_text(size = label_sz), legend.title = element_text(size = label_sz)
) +
facet_wrap(vars(data$sub))
ggplot() +
geom_tile(
data = doors, aes(x = xloc, y = yloc, fill = id, colour = "white"), show.legend = FALSE,
width = 0.9, height = 0.9, alpha = 1, col = "black"
) +
geom_text(
data = doors, aes(x = xloc, y = yloc, label = id),
size = 10
) +
geom_path(
data = opt, aes(x = x, y = y, group = solution_factor), linewidth = 2, linejoin = "mitre",
lineend = "butt", position = position_jitter(width = 0.1, height = 0.1), alpha = 0.8, arrow = arrow(
angle = 15,
type = "closed"
)
) +
theme_minimal() +
ylim(0.5, 4.5) +
xlim(
0.5,
4.5
) +
scale_fill_gradientn(colours = colours, guide = "none") +
labs(
title = sprintf("Context %d",ctx), x = "Door Position (x)",
y = "Door Position (y)"
) +
theme(
plot.title = element_text(size = title_sz), axis.text.x = element_text(size = label_sz),
axis.text.y = element_text(size = label_sz), legend.text = element_text(size = label_sz), axis.title.x = element_text(size = label_sz),
axis.title.y = element_text(size = label_sz), legend.title = element_text(size = label_sz)
) +
facet_wrap(vars(opt$sub))
ggplot() +
geom_tile(
data = doors, aes(x = xloc, y = yloc, fill = id, colour = "white"), show.legend = FALSE,
width = 0.9, height = 0.9, alpha = 1, col = "black"
) +
geom_text(
data = doors, aes(x = xloc, y = yloc, label = id),
size = 10
) +
geom_path(
data = opt, aes(x = x, y = y, group = solution_factor), linewidth = 2, linejoin = "mitre",
lineend = "butt", position = position_jitter(width = 0.1, height = 0.1), alpha = 0.8, arrow = arrow(
angle = 15,
type = "closed"
)
) +
theme_minimal() +
ylim(0.5, 4.5) +
xlim(
0.5,
4.5
) +
scale_fill_gradientn(colours = colours, guide = "none") +
labs(
title = sprintf("Context %d",ctx), x = "Door Position (x)",
y = "Door Position (y)"
) +
theme(
plot.title = element_text(size = title_sz), axis.text.x = element_text(size = label_sz),
axis.text.y = element_text(size = label_sz), legend.text = element_text(size = label_sz), axis.title.x = element_text(size = label_sz),
axis.title.y = element_text(size = label_sz), legend.title = element_text(size = label_sz)
) +
facet_wrap(vars(unique(opt$sub)))
unique(opt$sub)
View(observed)
ggplot() +
geom_tile(
data = doors, aes(x = xloc, y = yloc, fill = id, colour = "white"), show.legend = FALSE,
width = 0.9, height = 0.9, alpha = 1, col = "black"
) +
geom_text(
data = doors, aes(x = xloc, y = yloc, label = id),
size = 10
) +
geom_path(
data = opt, aes(x = x, y = y, group = solution_factor), linewidth = 2, linejoin = "mitre",
lineend = "butt", position = position_jitter(width = 0.1, height = 0.1), alpha = 0.8, arrow = arrow(
angle = 15,
type = "closed"
)
) +
theme_minimal() +
ylim(0.5, 4.5) +
xlim(
0.5,
4.5
) +
scale_fill_gradientn(colours = colours, guide = "none") +
labs(
title = sprintf("Context %d",ctx), x = "Door Position (x)",
y = "Door Position (y)"
) +
theme(
plot.title = element_text(size = title_sz), axis.text.x = element_text(size = label_sz),
axis.text.y = element_text(size = label_sz), legend.text = element_text(size = label_sz), axis.title.x = element_text(size = label_sz),
axis.title.y = element_text(size = label_sz), legend.title = element_text(size = label_sz)
) +
facet_wrap(vars(c(1:16)))
ggplot() +
geom_tile(
data = doors, aes(x = xloc, y = yloc, fill = id, colour = "white"), show.legend = FALSE,
width = 0.9, height = 0.9, alpha = 1, col = "black"
) +
geom_text(
data = doors, aes(x = xloc, y = yloc, label = id),
size = 10
) +
geom_path(
data = opt, aes(x = x, y = y, group = solution_factor), linewidth = 2, linejoin = "mitre",
lineend = "butt", position = position_jitter(width = 0.1, height = 0.1), alpha = 0.8, arrow = arrow(
angle = 15,
type = "closed"
)
) +
theme_minimal() +
ylim(0.5, 4.5) +
xlim(
0.5,
4.5
) +
scale_fill_gradientn(colours = colours, guide = "none") +
labs(
title = sprintf("Context %d",ctx), x = "Door Position (x)",
y = "Door Position (y)"
) +
theme(
plot.title = element_text(size = title_sz), axis.text.x = element_text(size = label_sz),
axis.text.y = element_text(size = label_sz), legend.text = element_text(size = label_sz), axis.title.x = element_text(size = label_sz),
axis.title.y = element_text(size = label_sz), legend.title = element_text(size = label_sz)
) +
facet_wrap(opt$sub)
