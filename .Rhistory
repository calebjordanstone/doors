group_by(sub, ses, context, train_type, transfer, full_transfer_first, original_house) %>%
summarise_all(mean) %>%
ungroup() %>%
select(!c(subses,switch)) %>%
filter(ses==2) %>%
select(sub, context, context_changes, train_type) %>%
mutate(train_type = train_type-1) %>%
mutate(sub = factor(sub),
train_type = case_when(train_type==0~"infrequent_change",train_type==1~"frequent_change"),
train_type = factor(train_type))
test_data <- avg_data %>%
filter(ses == 3) %>%
filter(switch == "stay") %>%
select(sub, transfer, accuracy, setting_errors, learned_setting_errors) %>%
mutate(sub = factor(sub),
transfer = case_when(transfer==1~"complete",transfer==2~"partial"),
transfer = factor(transfer)) %>%
pivot_wider(names_from=transfer, values_from=c(accuracy, setting_errors, learned_setting_errors))
data <- inner_join(train_data, test_data, by="sub")
View(data)
test_data <- avg_data
test_data <- avg_data %>%
filter(ses == 3)
test_data <- avg_data %>%
filter(ses == 3) %>%
filter(switch == 0)
test_data <- avg_data %>%
filter(ses == 3) %>%
filter(switch == 0) %>%
select(sub, transfer, accuracy, setting_errors, learned_setting_errors) %>%
mutate(sub = factor(sub),
transfer = case_when(transfer==1~"complete",transfer==2~"partial"),
transfer = factor(transfer)) %>%
pivot_wider(names_from=transfer, values_from=c(accuracy, setting_errors, learned_setting_errors))
data <- inner_join(train_data, test_data, by="sub")
View(data)
project_path <- '/Users/lydiabarnes/Documents/academe/projects/doors'
trial_data <- read_csv(file.path(project_path, 'res','exp_lt_trl.csv'), show_col_types = FALSE)
avg_data <- read_csv(file.path(project_path, 'res','exp_lt_avg.csv'), show_col_types = FALSE)
train_data <- trial_data %>%
group_by(sub, ses, train_type, transfer, full_transfer_first, original_house) %>%
summarise_all(mean) %>%
ungroup() %>%
select(!c(subses,switch)) %>%
filter(ses==2) %>%
select(sub, context, context_changes, train_type) %>%
mutate(train_type = train_type-1) %>%
mutate(sub = factor(sub),
train_type = case_when(train_type==0~"infrequent_change",train_type==1~"frequent_change"),
train_type = factor(train_type))
test_data <- avg_data %>%
filter(ses == 3) %>%
filter(switch == 0) %>%
select(sub, transfer, accuracy, setting_errors, learned_setting_errors) %>%
mutate(sub = factor(sub),
transfer = case_when(transfer==1~"complete",transfer==2~"partial"),
transfer = factor(transfer)) %>%
pivot_wider(names_from=transfer, values_from=c(accuracy, setting_errors, learned_setting_errors))
data <- inner_join(train_data, test_data, by="sub")
View(data)
project_path <- '/Users/lydiabarnes/Documents/academe/projects/doors'
trial_data <- read_csv(file.path(project_path, 'res','exp_lt_trl.csv'), show_col_types = FALSE)
avg_data <- read_csv(file.path(project_path, 'res','exp_lt_avg.csv'), show_col_types = FALSE)
train_data <- trial_data %>%
group_by(sub, ses, train_type, transfer, full_transfer_first, original_house) %>%
summarise_all(mean) %>%
ungroup() %>%
select(!c(subses,context,switch)) %>%
filter(ses==2) %>%
select(sub, context_changes, train_type) %>%
mutate(train_type = train_type-1) %>%
mutate(sub = factor(sub),
train_type = case_when(train_type==0~"infrequent_change",train_type==1~"frequent_change"),
train_type = factor(train_type))
test_data <- avg_data %>%
filter(ses == 3) %>%
filter(switch == 0) %>%
select(sub, transfer, accuracy, setting_errors, learned_setting_errors) %>%
mutate(sub = factor(sub),
transfer = case_when(transfer==1~"complete",transfer==2~"partial"),
transfer = factor(transfer)) %>%
pivot_wider(names_from=transfer, values_from=c(accuracy, setting_errors, learned_setting_errors))
data <- inner_join(train_data, test_data, by="sub")
train_data %>% ggplot(aes(x=context_changes, fill=train_type)) + geom_density(alpha=0.7)
k4_data <- read_csv(file.path(project_path, "exp_lt_maggi-k4.csv"))
k4_data <- read_csv(file.path(project_path, "res", "exp_lt_maggi-k4.csv"))
k4_data <- k4_data %>%
rename(sub = sid) %>%
mutate(transfer = case_when(transfer==1~"complete",transfer==2~"partial"),
transfer = factor(transfer))
k4_data$k4_onset[k4_data$k4_onset == Inf] <- k4_data$nclicks[k4_data$k4_onset == Inf]
k4_data <- k4_data %>%
filter(ses == 3) %>%
select(sub, transfer, k4_onset) %>%
pivot_wider(names_from = transfer, values_from = k4_onset)
data <- inner_join(data, k4_data, by="sub")
k4_data <- read_csv(file.path(project_path, "res", "exp_lt_maggi-k4.csv"))
k4_data <- k4_data %>%
rename(sub = sid) %>%
mutate(sub = factor(sub),
transfer = case_when(transfer==1~"complete",transfer==2~"partial"),
transfer = factor(transfer))
k4_data$k4_onset[k4_data$k4_onset == Inf] <- k4_data$nclicks[k4_data$k4_onset == Inf]
k4_data <- k4_data %>%
filter(ses == 3) %>%
select(sub, transfer, k4_onset) %>%
pivot_wider(names_from = transfer, values_from = k4_onset)
data <- inner_join(data, k4_data, by="sub")
stereo_data <- read_csv(file.path(project_path,"res", "exp_lt_stereotypy.csv"), show_col_types = FALSE)
stereo_data <- stereo_data %>%
select(sub, context, subses, reclicks) %>%
group_by(sub) %>%
summarise(reclicks = mean(reclicks)) %>%
mutate(sub = factor(sub))
View(stereo_data)
stereo_data <- read_csv(file.path(project_path,"res", "exp_lt_stereotypy.csv"), show_col_types = FALSE)
stereo_data <- stereo_data %>%
select(sub, context, reclicks) %>%
group_by(sub) %>%
summarise(reclicks = mean(reclicks)) %>%
mutate(sub = factor(sub))
data <- inner_join(data, stereo_data, by="sub")
View(k4_data)
project_path <- '/Users/lydiabarnes/Documents/academe/projects/doors'
trial_data <- read_csv(file.path(project_path, 'res','exp_lt_trl.csv'), show_col_types = FALSE)
avg_data <- read_csv(file.path(project_path, 'res','exp_lt_avg.csv'), show_col_types = FALSE)
train_data <- trial_data %>%
group_by(sub, ses, train_type, transfer, full_transfer_first, original_house) %>%
summarise_all(mean) %>%
ungroup() %>%
select(!c(subses,context,switch)) %>%
filter(ses==2) %>%
select(sub, context_changes, train_type) %>%
mutate(train_type = train_type-1) %>%
mutate(sub = factor(sub),
train_type = case_when(train_type==0~"infrequent_change",train_type==1~"frequent_change"),
train_type = factor(train_type))
test_data <- avg_data %>%
filter(ses == 3) %>%
filter(switch == 0) %>%
select(sub, transfer, accuracy, setting_errors, learned_setting_errors) %>%
mutate(sub = factor(sub),
transfer = case_when(transfer==1~"complete",transfer==2~"partial"),
transfer = factor(transfer)) %>%
pivot_wider(names_from=transfer, values_from=c(accuracy, setting_errors, learned_setting_errors))
data <- inner_join(train_data, test_data, by="sub")
train_data %>% ggplot(aes(x=context_changes, fill=train_type)) + geom_density(alpha=0.7)
k4_data <- read_csv(file.path(project_path, "res", "exp_lt_maggi-k4.csv"), show_col_types = FALSE)
k4_data <- k4_data %>%
rename(sub = sid) %>%
mutate(sub = factor(sub),
transfer = case_when(transfer==1~"complete",transfer==2~"partial"),
transfer = factor(transfer))
k4_data$k4_onset[k4_data$k4_onset == Inf] <- k4_data$nclicks[k4_data$k4_onset == Inf]
k4_data <- k4_data %>%
filter(ses == 3) %>%
select(sub, transfer, k4_onset) %>%
pivot_wider(names_from = transfer, values_from = k4_onset) %>%
rename(k4_complete = complete, k4_partial = partial)
data <- inner_join(data, k4_data, by="sub")
stereo_data <- read_csv(file.path(project_path,"res", "exp_lt_stereotypy.csv"), show_col_types = FALSE)
stereo_data <- stereo_data %>%
select(sub, context, reclicks) %>%
group_by(sub) %>%
summarise(reclicks = mean(reclicks)) %>%
mutate(sub = factor(sub))
data <- inner_join(data, stereo_data, by="sub")
data %>% ggplot(aes(x=reclocks, fill=train_type)) + geom_density(alpha = 0.7)
data %>% ggplot(aes(x=reclicks, fill=train_type)) + geom_density(alpha = 0.7)
mhl.mat <- as.matrix(data %>% select(context_changes, reclicks)) # turn the data into a matrix
mhl.cov <- cov(mhl.mat[,c("context_changes", "reclicks")]) # get the covariance
mhl.dist <- mahalanobis(mhl.mat[,c("context_changes", "reclicks")],
colMeans(mhl.mat[,c("context_changes", "reclicks")]), mhl.cov) # get mhl
hist(mhl.dist, breaks = 20, col=wes_palette("IsleofDogs1")[1]) #viz
sprintf("For a Mahalanobis to be less that .1 per cent likely to have occured by chance, given our degrees of feedom (%f), it has to be a value greater than %f", length(mhl.dist)-1, qchisq(.001, df=length(mhl.dist)-1))
apply(mhl.mat[,c("context_changes", "reclicks")], 2, var)
for_collin <- data.frame(mhl.mat[,c("context_changes", "reclicks")])
ggpairs(for_collin)
acc <- ggpairs(data %>% select(accuracy_complete, context_changes, reclicks))
acc
pacc <- ggpairs(data %>% select(accuracy_partial, context_changes, reclicks))
pacc
data %>% ggplot(aes(x=reclicks, fill=train_type)) + geom_density(alpha = 0.7) + scale_colour_brewer(wes_palette("IsleOfDogs1"))
data %>% ggplot(aes(x=reclicks, fill=train_type)) + geom_density(alpha = 0.7) + scale_fill_manual(values = wes_palette("IsleOfDogs1"), type = "continuous")
data %>% ggplot(aes(x=reclicks, fill=train_type)) + geom_density(alpha = 0.7) + scale_fill_manual(values = wes_palette("IsleofDogs1"), type = "continuous")
data %>% ggplot(aes(x=reclicks, fill=train_type)) + geom_density(alpha = 0.7) + scale_fill_manual(values = wes_palette("IsleofDogs1"), type = "discrete")
data %>% ggplot(aes(x=reclicks, fill=train_type)) + geom_density(alpha = 0.7) + scale_fill_manual(values = wes_palette("IsleofDogs1"))
train_data %>% ggplot(aes(x=context_changes, fill=train_type)) +
geom_density(alpha=0.7) +
scale_fill_manual(values = wes_palette("IsleofDogs1"))
serr <- ggpairs(data %>% select(setting_errors_complete, context_changes, reclicks))
serr
pserr <- ggpairs(data %>% select(setting_errors_partial, context_changes, reclicks))
pserr
kfour <- ggpairs(data %>% select(k4_complete, context_changes, reclicks))
kfour
pkfour <- ggpairs(data %>% select(k4_partial, context_changes, reclicks))
pkfour
train_data %>% ggplot(aes(x=context_changes, fill=train_type)) +
geom_density(alpha=0.7) +
scale_fill_manual(values = wes_palette("IsleofDogs1"))
project_path <- '/Users/lydiabarnes/Documents/academe/projects/doors'
trial_data <- read_csv(file.path(project_path, 'res','exp_ts_trl.csv'), show_col_types = FALSE)
avg_data <- read_csv(file.path(project_path, 'res','exp_ts_avg.csv'), show_col_types = FALSE)
train_data <- trial_data %>%
group_by(sub, ses, train_type) %>%
summarise_all(mean) %>%
ungroup() %>%
filter(ses==2) %>%
select(sub, context_changes, train_type) %>%
mutate(train_type = train_type-1) %>%
mutate(sub = factor(sub),
train_type = case_when(train_type==0~"infrequent_change",train_type==1~"frequent_change"),
train_type = factor(train_type))
test_data <- avg_data %>%
filter(ses == 3) %>%
filter(switch == 0) %>%
select(sub, switch, accuracy, setting_errors, rt) %>%
mutate(sub = factor(sub),
switch = case_when(switch==0~"stay",switch==1~"switch"),
switch = factor(switch)) %>%
pivot_wider(names_from=switch, values_from=c(accuracy, setting_errors, rt))
data <- inner_join(train_data, test_data, by="sub")
project_path <- '/Users/lydiabarnes/Documents/academe/projects/doors'
trial_data <- read_csv(file.path(project_path, 'res','exp_ts_trl.csv'), show_col_types = FALSE)
avg_data <- read_csv(file.path(project_path, 'res','exp_ts_avg.csv'), show_col_types = FALSE)
train_data <- trial_data %>%
group_by(sub, ses, train_type) %>%
summarise_all(mean) %>%
ungroup() %>%
filter(ses==2) %>%
select(sub, context_changes, train_type) %>%
mutate(train_type = train_type-1) %>%
mutate(sub = factor(sub),
train_type = case_when(train_type==0~"infrequent_change",train_type==1~"frequent_change"),
train_type = factor(train_type))
test_data <- avg_data %>%
filter(ses == 3) %>%
select(sub, switch, accuracy, setting_errors, rt) %>%
mutate(sub = factor(sub),
switch = case_when(switch==0~"stay",switch==1~"switch"),
switch = factor(switch)) %>%
pivot_wider(names_from=switch, values_from=c(accuracy, setting_errors, rt))
data <- inner_join(train_data, test_data, by="sub")
View(train_data)
train_data <- trial_data %>%
group_by(sub, ses, train_type) %>%
summarise_all(mean) %>%
ungroup() %>%
filter(ses==2) %>%
select(sub, context_changes, train_type) %>%
mutate(train_type = train_type-1) %>%
mutate(sub = factor(sub),
train_type = case_when(train_type==0~"infrequent_change",train_type==1~"frequent_change"),
train_type = factor(train_type))
test_data <- avg_data %>%
filter(ses == 3) %>%
select(sub, switch, accuracy, setting_errors, rt) %>%
mutate(sub = factor(sub),
switch = case_when(switch==0~"stay",switch==1~"switch"),
switch = factor(switch)) %>%
pivot_wider(names_from=switch, values_from=c(accuracy, setting_errors, rt))
View(test_data)
test_data <- avg_data %>%
filter(ses == 3) %>%
group_by(sub, switch) %>%
summarise_all(mean) %>%
select(sub, switch, accuracy, setting_errors, rt)
test_data <- avg_data %>%
filter(ses == 3) %>%
group_by(sub, switch) %>%
summarise_all(mean) %>%
select(sub, switch, accuracy, setting_errors, rt) %>%
mutate(sub = factor(sub),
switch = case_when(switch==0~"stay",switch==1~"switch"),
switch = factor(switch)) %>%
pivot_wider(names_from=switch, values_from=c(accuracy, setting_errors, rt))
project_path <- '/Users/lydiabarnes/Documents/academe/projects/doors'
trial_data <- read_csv(file.path(project_path, 'res','exp_ts_trl.csv'), show_col_types = FALSE)
avg_data <- read_csv(file.path(project_path, 'res','exp_ts_avg.csv'), show_col_types = FALSE)
train_data <- trial_data %>%
group_by(sub, ses, train_type) %>%
summarise_all(mean) %>%
ungroup() %>%
filter(ses==2) %>%
select(sub, context_changes, train_type) %>%
mutate(train_type = train_type-1) %>%
mutate(sub = factor(sub),
train_type = case_when(train_type==0~"infrequent_change",train_type==1~"frequent_change"),
train_type = factor(train_type))
test_data <- avg_data %>%
filter(ses == 3) %>%
group_by(sub, switch) %>%
summarise_all(mean) %>%
select(sub, switch, accuracy, setting_errors, rt) %>%
mutate(sub = factor(sub),
switch = case_when(switch==0~"stay",switch==1~"switch"),
switch = factor(switch)) %>%
pivot_wider(names_from=switch, values_from=c(accuracy, setting_errors, rt))
data <- inner_join(train_data, test_data, by="sub")
View(data)
stereo_data <- read_csv(file.path(project_path,"res", "exp_ts_stereotypy.csv"), show_col_types = FALSE)
stereo_data <- stereo_data %>%
select(sub, context, reclicks) %>%
group_by(sub) %>%
summarise(reclicks = mean(reclicks)) %>%
mutate(sub = factor(sub))
data <- inner_join(data, stereo_data, by="sub")
View(data)
# lydia barnes, may 2024 counts, clusters, and/or traces stereotypical behaviour during training to
# explain performance at test
# NB: people can get an imperfect match score for the optimal path but an overshoot of zero if they double-click.
#--------------------------------------------------------------------------------------------------
# sources
library(tidyverse)
library(gtools)
source(file.path(getwd(), "src-stereo", "count_stereo.R"))
# settings
exp <- "exp_ts" # experiment: 'exp_ts' (task-switching) or 'exp_lt' (learning transfer)
# paths
project_path <- getwd()
data_path <- file.path(project_path, "res")
if (!dir.exists(data_path)) {
stop(paste0(data_path, " does not exist"))
}
#--------------------------------------------------------------------------------------------------
# load event data
fnl <- file.path(data_path, paste(paste(exp, "evt", sep = "_"), ".csv", sep = ""))
data <- read_csv(fnl, show_col_types = FALSE)
data <- data %>% filter(ses == 2)
View(data)
# load shortest path data
fnl <- file.path(data_path, paste(paste(exp, "opt-path", sep = "_"), ".csv", sep = ""))
opt <- read_csv(fnl, show_col_types = FALSE)
# load graph of distances between doors
fnl <- file.path(project_path, "src-stereo", "graph.csv")
graph <- unname(data.matrix(read_csv(fnl, col_names = FALSE, show_col_types = FALSE)))
stereo <- count_stereo(exp, data, opt, graph)
# save to file
fnl <- file.path(project_path, "res", paste(paste(exp, "stereotypy", sep = "_"), ".csv", sep = ""))
write_csv(stereo, fnl)
stereo_data <- read_csv(file.path(project_path,"res", "exp_ts_stereotypy.csv"), show_col_types = FALSE)
stereo_data <- stereo_data %>%
select(sub, context, reclicks) %>%
group_by(sub) %>%
summarise(reclicks = mean(reclicks)) %>%
mutate(sub = factor(sub))
data <- inner_join(data, stereo_data, by="sub")
# some helpful things
library(tidyverse)
library(GGally)
library(lme4)
library(wesanderson)
project_path <- '/Users/lydiabarnes/Documents/academe/projects/doors'
trial_data <- read_csv(file.path(project_path, 'res','exp_ts_trl.csv'), show_col_types = FALSE)
avg_data <- read_csv(file.path(project_path, 'res','exp_ts_avg.csv'), show_col_types = FALSE)
train_data <- trial_data %>%
group_by(sub, ses, train_type) %>%
summarise_all(mean) %>%
ungroup() %>%
filter(ses==2) %>%
select(sub, context_changes, train_type) %>%
mutate(train_type = train_type-1) %>%
mutate(sub = factor(sub),
train_type = case_when(train_type==0~"infrequent_change",train_type==1~"frequent_change"),
train_type = factor(train_type))
test_data <- avg_data %>%
filter(ses == 3) %>%
group_by(sub, switch) %>%
summarise_all(mean) %>%
select(sub, switch, accuracy, setting_errors, rt) %>%
mutate(sub = factor(sub),
switch = case_when(switch==0~"stay",switch==1~"switch"),
switch = factor(switch)) %>%
pivot_wider(names_from=switch, values_from=c(accuracy, setting_errors, rt))
data <- inner_join(train_data, test_data, by="sub")
stereo_data <- read_csv(file.path(project_path,"res", "exp_ts_stereotypy.csv"), show_col_types = FALSE)
stereo_data <- stereo_data %>%
select(sub, context, reclicks) %>%
group_by(sub) %>%
summarise(reclicks = mean(reclicks)) %>%
mutate(sub = factor(sub))
data <- inner_join(data, stereo_data, by="sub")
train_data %>% ggplot(aes(x=context_changes, fill=train_type)) +
geom_density(alpha=0.7) +
scale_fill_manual(values = wes_palette("IsleofDogs1"))
data %>% ggplot(aes(x=reclicks, fill=train_type)) +
geom_density(alpha = 0.7) +
scale_fill_manual(values = wes_palette("IsleofDogs1"))
mhl.mat <- as.matrix(data %>% select(context_changes, reclicks)) # turn the data into a matrix
mhl.cov <- cov(mhl.mat[,c("context_changes", "reclicks")]) # get the covariance
mhl.dist <- mahalanobis(mhl.mat[,c("context_changes", "reclicks")],
colMeans(mhl.mat[,c("context_changes", "reclicks")]), mhl.cov) # get mhl
hist(mhl.dist, breaks = 20, col=wes_palette("IsleofDogs1")[1]) #viz
sprintf("For a Mahalanobis to be less that .1 per cent likely to have occured by chance, given our degrees of feedom (%f), it has to be a value greater than %f", length(mhl.dist)-1, qchisq(.001, df=length(mhl.dist)-1))
apply(mhl.mat[,c("context_changes", "reclicks")], 2, var)
for_collin <- data.frame(mhl.mat[,c("context_changes", "reclicks")])
ggpairs(for_collin)
acc <- ggpairs(data %>% select(accuracy_stay, context_changes, reclicks))
acc
sacc <- ggpairs(data %>% select(accuracy_switch, context_changes, reclicks))
sacc
serr <- ggpairs(data %>% select(setting_errors_stay, context_changes, reclicks))
serr
sserr <- ggpairs(data %>% select(setting_errors_switch, context_changes, reclicks))
sserr
rt <- ggpairs(data %>% select(rt_stay, context_changes, reclicks))
rt
srt <- ggpairs(data %>% select(rt_switch, context_changes, reclicks))
srt
lm(accuracy_stay~context_changes*train_type, data=data)
output <- lm(accuracy_stay~context_changes*train_type, data=data)
summary(output)
output <- lm(accuracy_stay~train_type, data=data)
summary(output)
#| echo: false
options(width=1000)
# some helpful things
library(tidyverse)
library(GGally)
library(lme4)
library(wesanderson)
project_path <- '/Users/lydiabarnes/Documents/academe/projects/doors'
trial_data <- read_csv(file.path(project_path, 'res','exp_lt_trl.csv'), show_col_types = FALSE)
avg_data <- read_csv(file.path(project_path, 'res','exp_lt_avg.csv'), show_col_types = FALSE)
train_data <- trial_data %>%
group_by(sub, ses, train_type, transfer, full_transfer_first, original_house) %>%
summarise_all(mean) %>%
ungroup() %>%
select(!c(subses,context,switch)) %>%
filter(ses==2) %>%
select(sub, context_changes, train_type) %>%
mutate(train_type = train_type-1) %>%
mutate(sub = factor(sub),
train_type = case_when(train_type==0~"infrequent_change",train_type==1~"frequent_change"),
train_type = factor(train_type))
test_data <- avg_data %>%
filter(ses == 3) %>%
filter(switch == 0) %>%
select(sub, transfer, accuracy, setting_errors, learned_setting_errors) %>%
mutate(sub = factor(sub),
transfer = case_when(transfer==1~"complete",transfer==2~"partial"),
transfer = factor(transfer)) %>%
pivot_wider(names_from=transfer, values_from=c(accuracy, setting_errors, learned_setting_errors))
data <- inner_join(train_data, test_data, by="sub")
k4_data <- read_csv(file.path(project_path, "res", "exp_lt_maggi-k4.csv"), show_col_types = FALSE)
k4_data <- k4_data %>%
rename(sub = sid) %>%
mutate(sub = factor(sub),
transfer = case_when(transfer==1~"complete",transfer==2~"partial"),
transfer = factor(transfer))
k4_data$k4_onset[k4_data$k4_onset == Inf] <- k4_data$nclicks[k4_data$k4_onset == Inf]
k4_data <- k4_data %>%
filter(ses == 3) %>%
select(sub, transfer, k4_onset) %>%
pivot_wider(names_from = transfer, values_from = k4_onset) %>%
rename(k4_complete = complete, k4_partial = partial)
data <- inner_join(data, k4_data, by="sub")
stereo_data <- read_csv(file.path(project_path,"res", "exp_lt_stereotypy.csv"), show_col_types = FALSE)
stereo_data <- stereo_data %>%
select(sub, context, reclicks) %>%
group_by(sub) %>%
summarise(reclicks = mean(reclicks)) %>%
mutate(sub = factor(sub))
data <- inner_join(data, stereo_data, by="sub")
train_data %>% ggplot(aes(x=context_changes, fill=train_type)) +
geom_density(alpha=0.7) +
scale_fill_manual(values = wes_palette("IsleofDogs1"))
data %>% ggplot(aes(x=reclicks, fill=train_type)) +
geom_density(alpha = 0.7) +
scale_fill_manual(values = wes_palette("IsleofDogs1"))
mhl.mat <- as.matrix(data %>% select(context_changes, reclicks)) # turn the data into a matrix
mhl.cov <- cov(mhl.mat[,c("context_changes", "reclicks")]) # get the covariance
mhl.dist <- mahalanobis(mhl.mat[,c("context_changes", "reclicks")],
colMeans(mhl.mat[,c("context_changes", "reclicks")]), mhl.cov) # get mhl
hist(mhl.dist, breaks = 20, col=wes_palette("IsleofDogs1")[1]) #viz
sprintf("For a Mahalanobis to be less that .1 per cent likely to have occured by chance, given our degrees of feedom (%f), it has to be a value greater than %f", length(mhl.dist)-1, qchisq(.001, df=length(mhl.dist)-1))
apply(mhl.mat[,c("context_changes", "reclicks")], 2, var)
for_collin <- data.frame(mhl.mat[,c("context_changes", "reclicks")])
ggpairs(for_collin)
acc <- ggpairs(data %>% select(accuracy_complete, context_changes, reclicks))
acc
pacc <- ggpairs(data %>% select(accuracy_partial, context_changes, reclicks))
pacc
serr <- ggpairs(data %>% select(setting_errors_complete, context_changes, reclicks))
serr
pserr <- ggpairs(data %>% select(setting_errors_partial, context_changes, reclicks))
pserr
kfour <- ggpairs(data %>% select(k4_complete, context_changes, reclicks))
kfour
pkfour <- ggpairs(data %>% select(k4_partial, context_changes, reclicks))
pkfour
output <- lm(accuracy_partial~train_type, data=data)
summary(output)
output <- lm(accuracy_complete-accuracy_partial~train_type, data=data)
summary(output)
output <- lm(accuracy_complete-accuracy_partial~train_type*context_changes, data=data)
summary(output)
output <- lm(accuracy_complete-accuracy_partial~train_type, data=data)
summary(output)
output <- lm(accuracy_complete-accuracy_partial~context_changes, data=data)
summary(output)
output <- lm(accuracy_complete-accuracy_partial~train_type*context_changes, data=data)
summary(output)
output <- lm(accuracy_complete-accuracy_partial~train_type, data=data)
summary(output)
output <- lm(accuracy_complete-accuracy_partial~context_changes, data=data)
summary(output)
output <- lm(accuracy_complete-accuracy_partial~train_type*context_changes, data=data)
summary(output)
output <- lm(accuracy_complete~train_type*context_changes, data=data)
summary(output)
