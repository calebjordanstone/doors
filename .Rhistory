summary(output)
output <- lm(accuracy_complete-accuracy_partial~general_errors*context_changes*reclicks, data=data)
summary(output)
output <- lm(accuracy_complete~context_changes*reclicks, data=data)
summary(output)
output <- lm(accuracy_complete~train_type*context_changes*reclicks, data=data)
summary(output)
output <- lm(accuracy_complete~train_type*context_changes, data=data)
summary(output)
output <- lm(accuracy_complete~train_type*reclicks, data=data)
summary(output)
output <- lm(accuracy_complete~train_type*general_errors*context_changes*reclicks, data=data)
summary(output)
output <- lm(accuracy_complete~general_errors*context_changes*reclicks, data=data)
summary(output)
output <- lm(accuracy_partial~context_changes*reclicks, data=data)
summary(output)
output <- lm(accuracy_partial~train_type*context_changes*reclicks, data=data)
summary(output)
output <- lm(accuracy_partial~train_type*context_changes, data=data)
summary(output)
output <- lm(accuracy_partial~train_type*reclicks, data=data)
summary(output)
output <- lm(accuracy_partial~train_type*general_errors*context_changes*reclicks, data=data)
summary(output)
output <- lm(accuracy_partial~general_errors*context_changes*reclicks, data=data)
summary(output)
output <- lm(setting_errors_complete-setting_errors_partial~context_changes*reclicks, data=data)
summary(output)
output <- lm(setting_errors_complete-setting_errors_partial~train_type*context_changes*reclicks, data=data)
summary(output)
output <- lm(setting_errors_complete-setting_errors_partial~train_type*context_changes, data=data)
summary(output)
output <- lm(setting_errors_complete-setting_errors_partial~train_type*reclicks, data=data)
summary(output)
output <- lm(setting_errors_complete-setting_errors_partial~train_type*general_errors*context_changes*reclicks, data=data)
summary(output)
output <- lm(setting_errors_complete-setting_errors_partial~general_errors*context_changes*reclicks, data=data)
summary(output)
output <- lm(setting_errors_complete~context_changes*reclicks, data=data)
summary(output)
output <- lm(setting_errors_complete~train_type*context_changes*reclicks, data=data)
summary(output)
output <- lm(setting_errors_complete~train_type*context_changes, data=data)
summary(output)
output <- lm(setting_errors_complete~train_type*reclicks, data=data)
summary(output)
output <- lm(setting_errors_complete~train_type*general_errors*context_changes*reclicks, data=data)
summary(output)
output <- lm(setting_errors_complete~general_errors*context_changes*reclicks, data=data)
summary(output)
output <- lm(setting_errors_partial~context_changes*reclicks, data=data)
summary(output)
output <- lm(setting_errors_partial~train_type*context_changes*reclicks, data=data)
summary(output)
output <- lm(setting_errors_partial~train_type*context_changes, data=data)
summary(output)
output <- lm(setting_errors_partial~train_type*reclicks, data=data)
summary(output)
output <- lm(setting_errors_partial~train_type*general_errors*context_changes*reclicks, data=data)
summary(output)
output <- lm(setting_errors_partial~general_errors*context_changes*reclicks, data=data)
summary(output)
output <- lm(k4_complete-k4_partial~context_changes*reclicks, data=data)
summary(output)
output <- lm(k4_complete-k4_partial~train_type*context_changes*reclicks, data=data)
summary(output)
output <- lm(k4_complete-k4_partial~train_type*context_changes, data=data)
summary(output)
output <- lm(k4_complete-k4_partial~train_type*reclicks, data=data)
summary(output)
output <- lm(k4_complete-k4_partial~train_type*general_errors*context_changes*reclicks, data=data)
summary(output)
output <- lm(k4_complete-k4_partial~general_errors*context_changes*reclicks, data=data)
summary(output)
output <- lm(k4_complete~context_changes*reclicks, data=data)
summary(output)
output <- lm(k4_complete~train_type*context_changes*reclicks, data=data)
summary(output)
output <- lm(k4_complete~train_type*context_changes, data=data)
summary(output)
output <- lm(k4_complete~train_type*reclicks, data=data)
summary(output)
output <- lm(k4_complete~train_type*general_errors*context_changes*reclicks, data=data)
summary(output)
output <- lm(k4_complete~general_errors*context_changes*reclicks, data=data)
summary(output)
output <- lm(k4_partial~context_changes*reclicks, data=data)
summary(output)
output <- lm(k4_partial~train_type*context_changes*reclicks, data=data)
summary(output)
output <- lm(k4_partial~train_type*context_changes, data=data)
summary(output)
output <- lm(k4_partial~train_type*reclicks, data=data)
summary(output)
output <- lm(k4_partial~train_type*general_errors*context_changes*reclicks, data=data)
summary(output)
output <- lm(k4_partial~general_errors*context_changes*reclicks, data=data)
summary(output)
renv::snapshot()
# some helpful things
library(tidyverse)
library(GGally)
library(lme4)
library(lmerTest)
library(sjstats)
library(wesanderson)
project_path <- '/Users/lydiabarnes/Documents/academe/projects/doors'
trial_data <- read_csv(file.path(project_path, 'res','exp_lt_trl.csv'), show_col_types = FALSE)
avg_data <- read_csv(file.path(project_path, 'res','exp_lt_avg.csv'), show_col_types = FALSE)
train_data <- trial_data %>%
group_by(sub, ses, train_type, transfer, full_transfer_first, original_house) %>%
summarise_all(mean) %>%
ungroup() %>%
select(!c(subses,context,switch)) %>%
filter(ses==2) %>%
select(sub, general_errors, context_changes, train_type) %>%
mutate(train_type = train_type-1) %>%
mutate(sub = factor(sub),
train_type = case_when(train_type==0~"infrequent_change",train_type==1~"frequent_change"),
train_type = factor(train_type))
test_data <- avg_data %>%
filter(ses == 3) %>%
filter(switch == 0) %>%
select(sub, transfer, accuracy, setting_errors, learned_setting_errors) %>%
mutate(sub = factor(sub),
transfer = case_when(transfer==1~"complete",transfer==2~"partial"),
transfer = factor(transfer)) %>%
pivot_wider(names_from=transfer, values_from=c(accuracy, setting_errors, learned_setting_errors))
data <- inner_join(train_data, test_data, by="sub")
k4_data <- read_csv(file.path(project_path, "res", "exp_lt_maggi-k4.csv"), show_col_types = FALSE)
k4_data <- k4_data %>%
rename(sub = sid) %>%
mutate(sub = factor(sub),
transfer = case_when(transfer==1~"complete",transfer==2~"partial"),
transfer = factor(transfer))
k4_data$k4_onset[k4_data$k4_onset == Inf] <- k4_data$nclicks[k4_data$k4_onset == Inf]
k4_data <- k4_data %>%
filter(ses == 3) %>%
select(sub, transfer, k4_onset) %>%
pivot_wider(names_from = transfer, values_from = k4_onset) %>%
rename(k4_complete = complete, k4_partial = partial)
data <- inner_join(data, k4_data, by="sub")
stereo_data <- read_csv(file.path(project_path,"res", "exp_lt_stereotypy.csv"), show_col_types = FALSE)
stereo_data <- stereo_data %>%
select(sub, context, reclicks) %>%
group_by(sub) %>%
summarise(reclicks = mean(reclicks)) %>%
mutate(sub = factor(sub))
data <- inner_join(data, stereo_data, by="sub")
train_data %>% ggplot(aes(x=context_changes, fill=train_type)) +
geom_density(alpha=0.7) +
scale_fill_manual(values = wes_palette("IsleofDogs1"))
data %>% ggplot(aes(x=reclicks, fill=train_type)) +
geom_density(alpha = 0.7) +
scale_fill_manual(values = wes_palette("IsleofDogs1"))
var_names <- c("general_errors","context_changes", "reclicks")
mhl.mat <- as.matrix(data %>% select(general_errors, context_changes, reclicks)) # turn the data into a matrix
mhl.cov <- cov(mhl.mat[,var_names]) # get the covariance
mhl.dist <- mahalanobis(mhl.mat[,var_names],
colMeans(mhl.mat[,var_names]), mhl.cov) # get mhl
hist(mhl.dist, breaks = 20, col=wes_palette("IsleofDogs1")[1]) #viz
sprintf("For a Mahalanobis to be less that .1 per cent likely to have occured by chance, given our degrees of feedom (%f), it has to be a value greater than %f", length(mhl.dist)-1, qchisq(.001, df=length(mhl.dist)-1))
apply(mhl.mat[,var_names], 2, var)
for_collin <- data.frame(mhl.mat[,var_names])
ggpairs(for_collin)
acc <- ggpairs(data %>% select(accuracy_complete, context_changes, reclicks))
acc
pacc <- ggpairs(data %>% select(accuracy_partial, context_changes, reclicks))
pacc
serr <- ggpairs(data %>% select(setting_errors_complete, context_changes, reclicks))
serr
pserr <- ggpairs(data %>% select(setting_errors_partial, context_changes, reclicks))
pserr
kfour <- ggpairs(data %>% select(k4_complete, context_changes, reclicks))
kfour
pkfour <- ggpairs(data %>% select(k4_partial, context_changes, reclicks))
pkfour
data <- data %>%
mutate(general_errors = scale(general_errors)[,1],
reclicks = scale(reclicks)[,1],
context_changes = scale(context_changes)[,1])
output <- lm(accuracy_complete-accuracy_partial~train_type*general_errors*context_changes*reclicks, data=data)
summary(output)
output <- lm(setting_errors_complete-setting_errors_partial~train_type*general_errors*context_changes*reclicks, data=data)
summary(output)
output <- lm(k4_complete-k4_partial~train_type*general_errors*context_changes*reclicks, data=data)
summary(output)
output <- lm(accuracy_complete-accuracy_partial~context_changes*reclicks, data=data)
summary(output)
output <- lm(accuracy_complete-accuracy_partial~train_type*context_changes*reclicks, data=data)
summary(output)
output <- lm(accuracy_complete-accuracy_partial~train_type*context_changes, data=data)
summary(output)
output <- lm(accuracy_complete-accuracy_partial~train_type*reclicks, data=data)
summary(output)
output <- lm(accuracy_complete-accuracy_partial~general_errors*context_changes*reclicks, data=data)
summary(output)
output <- lm(accuracy_complete~context_changes*reclicks, data=data)
summary(output)
output <- lm(accuracy_complete~train_type*context_changes*reclicks, data=data)
summary(output)
output <- lm(accuracy_complete~train_type*context_changes, data=data)
summary(output)
output <- lm(accuracy_complete~train_type*reclicks, data=data)
summary(output)
output <- lm(accuracy_complete~general_errors*context_changes*reclicks, data=data)
summary(output)
output <- lm(accuracy_complete~train_type*general_errors*context_changes*reclicks, data=data)
summary(output)
output <- lm(accuracy_partial~context_changes*reclicks, data=data)
summary(output)
output <- lm(accuracy_partial~train_type*context_changes*reclicks, data=data)
summary(output)
output <- lm(accuracy_partial~train_type*context_changes, data=data)
summary(output)
output <- lm(accuracy_partial~train_type*reclicks, data=data)
summary(output)
output <- lm(accuracy_partial~general_errors*context_changes*reclicks, data=data)
summary(output)
output <- lm(accuracy_partial~train_type*general_errors*context_changes*reclicks, data=data)
summary(output)
output <- lm(setting_errors_complete-setting_errors_partial~context_changes*reclicks, data=data)
summary(output)
output <- lm(setting_errors_complete-setting_errors_partial~train_type*context_changes*reclicks, data=data)
summary(output)
output <- lm(setting_errors_complete-setting_errors_partial~train_type*context_changes, data=data)
summary(output)
output <- lm(setting_errors_complete-setting_errors_partial~train_type*reclicks, data=data)
summary(output)
output <- lm(setting_errors_complete-setting_errors_partial~general_errors*context_changes*reclicks, data=data)
summary(output)
output <- lm(setting_errors_complete~context_changes*reclicks, data=data)
summary(output)
output <- lm(setting_errors_complete~train_type*context_changes*reclicks, data=data)
summary(output)
output <- lm(setting_errors_complete~train_type*context_changes, data=data)
summary(output)
output <- lm(setting_errors_complete~train_type*reclicks, data=data)
summary(output)
output <- lm(setting_errors_complete~general_errors*context_changes*reclicks, data=data)
summary(output)
output <- lm(setting_errors_complete~train_type*general_errors*context_changes*reclicks, data=data)
summary(output)
output <- lm(setting_errors_partial~context_changes*reclicks, data=data)
summary(output)
output <- lm(setting_errors_partial~train_type*context_changes*reclicks, data=data)
summary(output)
output <- lm(setting_errors_partial~train_type*context_changes, data=data)
summary(output)
output <- lm(setting_errors_partial~train_type*reclicks, data=data)
summary(output)
output <- lm(setting_errors_partial~train_type*general_errors*context_changes*reclicks, data=data)
summary(output)
output <- lm(setting_errors_partial~general_errors*context_changes*reclicks, data=data)
summary(output)
output <- lm(k4_complete-k4_partial~context_changes*reclicks, data=data)
summary(output)
output <- lm(k4_complete-k4_partial~train_type*context_changes*reclicks, data=data)
summary(output)
output <- lm(k4_complete-k4_partial~train_type*context_changes, data=data)
summary(output)
output <- lm(k4_complete-k4_partial~train_type*reclicks, data=data)
summary(output)
output <- lm(k4_complete-k4_partial~general_errors*context_changes*reclicks, data=data)
summary(output)
output <- lm(k4_complete~context_changes*reclicks, data=data)
summary(output)
output <- lm(k4_complete~train_type*context_changes*reclicks, data=data)
summary(output)
output <- lm(k4_complete~train_type*context_changes, data=data)
summary(output)
output <- lm(k4_complete~train_type*reclicks, data=data)
summary(output)
output <- lm(k4_complete~general_errors*context_changes*reclicks, data=data)
summary(output)
output <- lm(k4_complete~train_type*general_errors*context_changes*reclicks, data=data)
summary(output)
output <- lm(k4_partial~context_changes*reclicks, data=data)
summary(output)
output <- lm(k4_partial~train_type*context_changes*reclicks, data=data)
summary(output)
output <- lm(k4_partial~train_type*context_changes, data=data)
summary(output)
output <- lm(k4_partial~train_type*reclicks, data=data)
summary(output)
output <- lm(k4_partial~general_errors*context_changes*reclicks, data=data)
summary(output)
output <- lm(k4_partial~train_type*general_errors*context_changes*reclicks, data=data)
summary(output)
# some helpful things
library(tidyverse)
library(GGally)
library(lme4)
library(wesanderson)
project_path <- '/Users/lydiabarnes/Documents/academe/projects/doors'
trial_data <- read_csv(file.path(project_path, 'res','exp_ts_trl.csv'), show_col_types = FALSE)
avg_data <- read_csv(file.path(project_path, 'res','exp_ts_avg.csv'), show_col_types = FALSE)
train_data <- trial_data %>%
group_by(sub, ses, train_type) %>%
summarise_all(mean) %>%
ungroup() %>%
filter(ses==2) %>%
select(sub, general_errors, context_changes, train_type) %>%
mutate(train_type = train_type-1) %>%
mutate(sub = factor(sub),
train_type = case_when(train_type==0~"infrequent_change",train_type==1~"frequent_change"),
train_type = factor(train_type))
test_data <- avg_data %>%
filter(ses == 3) %>%
group_by(sub, switch) %>%
summarise_all(mean) %>%
select(sub, switch, accuracy, setting_errors, rt) %>%
mutate(sub = factor(sub),
switch = case_when(switch==0~"stay",switch==1~"switch"),
switch = factor(switch)) %>%
pivot_wider(names_from=switch, values_from=c(accuracy, setting_errors, rt))
data <- inner_join(train_data, test_data, by="sub")
data <- data %>%
mutate(accuracy = accuracy_stay-accuracy_switch,
setting_errors = setting_errors_stay-setting_errors_switch,
rt = rt_stay-rt_switch)
stereo_data <- read_csv(file.path(project_path,"res", "exp_ts_stereotypy.csv"), show_col_types = FALSE)
stereo_data <- stereo_data %>%
select(sub, context, reclicks) %>%
group_by(sub) %>%
summarise(reclicks = mean(reclicks)) %>%
mutate(sub = factor(sub))
data <- inner_join(data, stereo_data, by="sub")
train_data %>% ggplot(aes(x=context_changes, fill=train_type)) +
geom_density(alpha=0.7) +
scale_fill_manual(values = wes_palette("IsleofDogs1"))
data %>% ggplot(aes(x=reclicks, fill=train_type)) +
geom_density(alpha = 0.7) +
scale_fill_manual(values = wes_palette("IsleofDogs1"))
var_names <- c("general_errors","context_changes", "reclicks")
mhl.mat <- as.matrix(data %>% select(general_errors, context_changes, reclicks)) # turn the data into a matrix
mhl.cov <- cov(mhl.mat[,var_names]) # get the covariance
mhl.dist <- mahalanobis(mhl.mat[,var_names],
colMeans(mhl.mat[,var_names]), mhl.cov) # get mhl
hist(mhl.dist, breaks = 20, col=wes_palette("IsleofDogs1")[1]) #viz
sprintf("For a Mahalanobis to be less that .1 per cent likely to have occured by chance, given our degrees of feedom (%f), it has to be a value greater than %f", length(mhl.dist)-1, qchisq(.001, df=length(mhl.dist)-1))
apply(mhl.mat[,var_names], 2, var)
for_collin <- data.frame(mhl.mat[,var_names])
ggpairs(for_collin)
acc <- ggpairs(data %>% select(accuracy_stay, context_changes, reclicks))
acc
sacc <- ggpairs(data %>% select(accuracy_switch, context_changes, reclicks))
sacc
swacc <- ggpairs(data %>% select(accuracy, context_changes, reclicks))
swacc
serr <- ggpairs(data %>% select(setting_errors_stay, context_changes, reclicks))
serr
sserr <- ggpairs(data %>% select(setting_errors_switch, context_changes, reclicks))
sserr
swserr <- ggpairs(data %>% select(setting_errors, context_changes, reclicks))
swserr
rt <- ggpairs(data %>% select(rt_stay, context_changes, reclicks))
rt
srt <- ggpairs(data %>% select(rt_switch, context_changes, reclicks))
srt
swrt <- ggpairs(data %>% select(rt, context_changes, reclicks))
swrt
data <- data %>%
mutate(general_errors = scale(general_errors)[,1],
reclicks = scale(reclicks)[,1],
context_changes = scale(context_changes)[,1])
output <- lm(accuracy_stay-accuracy_switch~train_type*general_errors*context_changes*reclicks, data=data)
summary(output)
output <- lm(setting_errors_stay-setting_errors_switch~train_type*general_errors*context_changes*reclicks, data=data)
summary(output)
output <- lm(rt_stay-rt_switch~train_type*general_errors*context_changes*reclicks, data=data)
summary(output)
output <- lm(accuracy_stay-accuracy_switch~context_changes*reclicks, data=data)
summary(output)
output <- lm(accuracy_stay-accuracy_switch~train_type*context_changes*reclicks, data=data)
summary(output)
output <- lm(accuracy_stay-accuracy_switch~train_type*context_changes, data=data)
summary(output)
output <- lm(accuracy_stay-accuracy_switch~train_type*reclicks, data=data)
summary(output)
output <- lm(accuracy_stay-accuracy_switch~general_errors*context_changes*reclicks, data=data)
summary(output)
output <- lm(setting_errors_stay-setting_errors_switch~context_changes*reclicks, data=data)
summary(output)
output <- lm(setting_errors_stay-setting_errors_switch~train_type*context_changes*reclicks, data=data)
summary(output)
output <- lm(setting_errors_stay-setting_errors_switch~train_type*context_changes, data=data)
summary(output)
output <- lm(setting_errors_stay-setting_errors_switch~train_type*reclicks, data=data)
summary(output)
output <- lm(setting_errors_stay-setting_errors_switch~general_errors*context_changes*reclicks, data=data)
summary(output)
output <- lm(rt_stay-rt_switch~context_changes*reclicks, data=data)
summary(output)
output <- lm(rt_stay-rt_switch~train_type*context_changes*reclicks, data=data)
summary(output)
output <- lm(rt_stay-rt_switch~train_type*context_changes, data=data)
summary(output)
output <- lm(rt_stay-rt_switch~train_type*reclicks, data=data)
summary(output)
output <- lm(rt_stay-rt_switch~general_errors*context_changes*reclicks, data=data)
summary(output)
output <- lm(accuracy_stay-accuracy_switch~train_type*general_errors*context_changes*reclicks, data=data)
summary(output) %>%
as_flex_table() %>%
flextable::set_table_properties("autofit")
install.packages(flextable)
# some helpful things
library(tidyverse)
library(GGally)
library(lme4)
library(flextable)
library(wesanderson)
# some helpful things
library(tidyverse)
library(GGally)
library(lme4)
library(flextable)
library(wesanderson)
project_path <- '/Users/lydiabarnes/Documents/academe/projects/doors'
trial_data <- read_csv(file.path(project_path, 'res','exp_ts_trl.csv'), show_col_types = FALSE)
avg_data <- read_csv(file.path(project_path, 'res','exp_ts_avg.csv'), show_col_types = FALSE)
train_data <- trial_data %>%
group_by(sub, ses, train_type) %>%
summarise_all(mean) %>%
ungroup() %>%
filter(ses==2) %>%
select(sub, general_errors, context_changes, train_type) %>%
mutate(train_type = train_type-1) %>%
mutate(sub = factor(sub),
train_type = case_when(train_type==0~"infrequent_change",train_type==1~"frequent_change"),
train_type = factor(train_type))
test_data <- avg_data %>%
filter(ses == 3) %>%
group_by(sub, switch) %>%
summarise_all(mean) %>%
select(sub, switch, accuracy, setting_errors, rt) %>%
mutate(sub = factor(sub),
switch = case_when(switch==0~"stay",switch==1~"switch"),
switch = factor(switch)) %>%
pivot_wider(names_from=switch, values_from=c(accuracy, setting_errors, rt))
data <- inner_join(train_data, test_data, by="sub")
data <- data %>%
mutate(accuracy = accuracy_stay-accuracy_switch,
setting_errors = setting_errors_stay-setting_errors_switch,
rt = rt_stay-rt_switch)
stereo_data <- read_csv(file.path(project_path,"res", "exp_ts_stereotypy.csv"), show_col_types = FALSE)
stereo_data <- stereo_data %>%
select(sub, context, reclicks) %>%
group_by(sub) %>%
summarise(reclicks = mean(reclicks)) %>%
mutate(sub = factor(sub))
data <- inner_join(data, stereo_data, by="sub")
train_data %>% ggplot(aes(x=context_changes, fill=train_type)) +
geom_density(alpha=0.7) +
scale_fill_manual(values = wes_palette("IsleofDogs1"))
data %>% ggplot(aes(x=reclicks, fill=train_type)) +
geom_density(alpha = 0.7) +
scale_fill_manual(values = wes_palette("IsleofDogs1"))
var_names <- c("general_errors","context_changes", "reclicks")
mhl.mat <- as.matrix(data %>% select(general_errors, context_changes, reclicks)) # turn the data into a matrix
mhl.cov <- cov(mhl.mat[,var_names]) # get the covariance
mhl.dist <- mahalanobis(mhl.mat[,var_names],
colMeans(mhl.mat[,var_names]), mhl.cov) # get mhl
hist(mhl.dist, breaks = 20, col=wes_palette("IsleofDogs1")[1]) #viz
sprintf("For a Mahalanobis to be less that .1 per cent likely to have occured by chance, given our degrees of feedom (%f), it has to be a value greater than %f", length(mhl.dist)-1, qchisq(.001, df=length(mhl.dist)-1))
apply(mhl.mat[,var_names], 2, var)
for_collin <- data.frame(mhl.mat[,var_names])
ggpairs(for_collin)
acc <- ggpairs(data %>% select(accuracy_stay, context_changes, reclicks))
acc
sacc <- ggpairs(data %>% select(accuracy_switch, context_changes, reclicks))
sacc
swacc <- ggpairs(data %>% select(accuracy, context_changes, reclicks))
swacc
serr <- ggpairs(data %>% select(setting_errors_stay, context_changes, reclicks))
serr
sserr <- ggpairs(data %>% select(setting_errors_switch, context_changes, reclicks))
sserr
swserr <- ggpairs(data %>% select(setting_errors, context_changes, reclicks))
swserr
rt <- ggpairs(data %>% select(rt_stay, context_changes, reclicks))
rt
srt <- ggpairs(data %>% select(rt_switch, context_changes, reclicks))
srt
swrt <- ggpairs(data %>% select(rt, context_changes, reclicks))
swrt
data <- data %>%
mutate(general_errors = scale(general_errors)[,1],
reclicks = scale(reclicks)[,1],
context_changes = scale(context_changes)[,1])
output <- lm(accuracy_stay-accuracy_switch~train_type*general_errors*context_changes*reclicks, data=data)
summary(output) %>%
as_flex_table() %>%
set_table_properties("autofit")
output <- lm(accuracy_stay-accuracy_switch~train_type*general_errors*context_changes*reclicks, data=data)
tbl_summary(output) %>%
as_flex_table() %>%
set_table_properties("autofit")
output <- lm(accuracy_stay-accuracy_switch~train_type*general_errors*context_changes*reclicks, data=data)
flextable(summary(output)) %>%
set_table_properties("autofit")
output <- lm(accuracy_stay-accuracy_switch~train_type*general_errors*context_changes*reclicks, data=data)
flextable(output) %>%
set_table_properties("autofit")
output <- lm(accuracy_stay-accuracy_switch~train_type*general_errors*context_changes*reclicks, data=data)
summary(output) %>%
as_flextable() %>%
set_table_properties("autofit")
output <- lm(accuracy_stay-accuracy_switch~train_type*general_errors*context_changes*reclicks, data=data)
print(summary(output))
