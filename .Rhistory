) +
scale_x_discrete(labels = c("Low Switch", "High Switch")) +
labs(title = "Mid-Trial Errors", x = "Training Group", y = "Setting Errors") +
theme(
plot.title = element_text(size = label_sz),
axis.text.x = element_text(size = label_sz), axis.text.y = element_text(size = label_sz), legend.text = element_text(size = label_sz),
axis.title.x = element_text(size = label_sz), axis.title.y = element_text(size = label_sz), legend.title = element_text(size = label_sz)
)
ggarrange(plotlist=pl,nrow=1,ncol=2)
fnl <- file.path(project_path, "fig", paste(paste(exp, ses, "sticks-and-slips", sep = "_"), ".pdf",sep = ""))
fnl <- file.path(project_path, "fig", paste(paste(exp, "sticks-and-slips", sep = "_"), ".pdf",sep = ""))
ggsave(fnl, plot = last_plot(),width = 24, height = 18, limitsize = FALSE)
ggsave(fnl, plot = last_plot(),width = 15, height = 10, limitsize = FALSE)
ggsave(fnl, plot = last_plot(),width = 15, height = 8, limitsize = FALSE)
library(tidyverse)
library(ggforce)
library(ggsci)
library(ggpubr)
project_path <- getwd()
# settings
exp <- "exp_lt" # experiment: 'exp_ts' (task-conding) or 'exp_lt' (learning transfer)
label_sz <- 10
# data
fnl <- file.path(project_path, "res", paste(paste(exp, "trl", sep = "_"), ".csv", sep = ""))
res <- read.csv(fnl)
View(res)
fnl <- file.path(project_path, "res", paste(paste(exp, "maggi-k4", sep = "_"), ".csv", sep = ""))
res <- read.csv(fnl)
View(res)
res <- res %>% group_by(sub,ses) %>% summarise_all(mean)
res <- res %>% group_by(sid,ses) %>% summarise_all(mean)
View(res)
fnl <- file.path(project_path, "res", paste(paste(exp, "maggi-k4", sep = "_"), ".csv", sep = ""))
res <- read.csv(fnl)
res <- res %>% group_by(sid,ses) %>% summarise_all(mean) %>% select(!X,!context,!transfer)
fnl <- file.path(project_path, "res", paste(paste(exp, "maggi-k4", sep = "_"), ".csv", sep = ""))
res <- read.csv(fnl)
pl <- list()
for (session in unique(res$ses)){
tmp <- res %>% filter(ses==session)
pl[[session]] <- tmp %>%
ggplot() +
geom_density(aes(x=k4_onset, colour = factor(context)), linewidth = 1) +
guides(linetype=FALSE) +
theme_minimal() +
scale_color_brewer(
name = "Context",
#labels = c("Learn","Train","Test")
) +
labs(title = paste("Phase",session,sep=" "), x = "K4 Onset", y = "Density") +
theme(
plot.title = element_text(size = label_sz),
axis.text.x = element_text(size = label_sz), axis.text.y = element_text(size = label_sz), legend.text = element_text(size = label_sz),
axis.title.x = element_text(size = label_sz), axis.title.y = element_text(size = label_sz), legend.title = element_text(size = label_sz)
)
}
ggarrange(plotlist=pl,nrow=1,ncol=3)
fnl <- file.path(project_path, "res", paste(paste(exp, "maggi-k4", sep = "_"), ".csv", sep = ""))
res <- read.csv(fnl)
res <- res %>% mutate(context = case_when(context < 3 ~ context, context==3~1, context==4~2))
pl <- list()
for (session in unique(res$ses)){
tmp <- res %>% filter(ses==session)
pl[[session]] <- tmp %>%
ggplot() +
geom_density(aes(x=k4_onset, colour = factor(context)), linewidth = 1) +
guides(linetype=FALSE) +
theme_minimal() +
scale_color_brewer(
name = "Context",
#labels = c("Learn","Train","Test")
) +
labs(title = paste("Phase",session,sep=" "), x = "K4 Onset", y = "Density") +
theme(
plot.title = element_text(size = label_sz),
axis.text.x = element_text(size = label_sz), axis.text.y = element_text(size = label_sz), legend.text = element_text(size = label_sz),
axis.title.x = element_text(size = label_sz), axis.title.y = element_text(size = label_sz), legend.title = element_text(size = label_sz)
)
}
ggarrange(plotlist=pl,nrow=1,ncol=2)
res <- read.csv(fnl)
pl <- list()
pl[[1]] <- res %>% filter(ses==1) %>%
ggplot() +
geom_density(aes(x=k4_onset, colour = factor(context)), linewidth = 1) +
guides(linetype=FALSE) +
theme_minimal() +
scale_color_brewer(
name = "Context",
#labels = c("Learn","Train","Test")
) +
labs(title = "Learn Phase", x = "K4 Onset", y = "Density") +
theme(
plot.title = element_text(size = label_sz),
axis.text.x = element_text(size = label_sz), axis.text.y = element_text(size = label_sz), legend.text = element_text(size = label_sz),
axis.title.x = element_text(size = label_sz), axis.title.y = element_text(size = label_sz), legend.title = element_text(size = label_sz)
)
pl[[2]] <- res %>% filter(ses==3) %>%
ggplot() +
geom_density(aes(x=k4_onset, colour = factor(transfer)), linewidth = 1) +
guides(linetype=FALSE) +
theme_minimal() +
scale_color_brewer(
name = "Transfer",
#labels = c("Learn","Train","Test")
) +
labs(title = "Test Phase", x = "K4 Onset", y = "Density") +
theme(
plot.title = element_text(size = label_sz),
axis.text.x = element_text(size = label_sz), axis.text.y = element_text(size = label_sz), legend.text = element_text(size = label_sz),
axis.title.x = element_text(size = label_sz), axis.title.y = element_text(size = label_sz), legend.title = element_text(size = label_sz)
)
ggarrange(plotlist=pl,nrow=1,ncol=2)
pl <- list()
pl[[1]] <- res %>% filter(ses==1) %>%
ggplot() +
geom_density(aes(x=k4_onset, colour = factor(context)), linewidth = 1) +
guides(linetype=FALSE) +
theme_minimal() +
scale_color_brewer(
name = "Context",
labels = c("A","B")
) +
labs(title = "Learn Phase", x = "K4 Onset", y = "Density") +
theme(
plot.title = element_text(size = label_sz),
axis.text.x = element_text(size = label_sz), axis.text.y = element_text(size = label_sz), legend.text = element_text(size = label_sz),
axis.title.x = element_text(size = label_sz), axis.title.y = element_text(size = label_sz), legend.title = element_text(size = label_sz)
)
pl[[2]] <- res %>% filter(ses==3) %>%
ggplot() +
geom_density(aes(x=k4_onset, colour = factor(transfer)), linewidth = 1) +
guides(linetype=FALSE) +
theme_minimal() +
scale_color_brewer(
name = "Transfer",
labels = c("Full","Partial")
) +
labs(title = "Test Phase", x = "K4 Onset", y = "Density") +
theme(
plot.title = element_text(size = label_sz),
axis.text.x = element_text(size = label_sz), axis.text.y = element_text(size = label_sz), legend.text = element_text(size = label_sz),
axis.title.x = element_text(size = label_sz), axis.title.y = element_text(size = label_sz), legend.title = element_text(size = label_sz)
)
ggarrange(plotlist=pl,nrow=1,ncol=2)
# lydia barnes, august 2024
# views k4 onset in learn and test phase
library(tidyverse)
library(ggforce)
library(ggsci)
library(ggpubr)
project_path <- getwd()
# settings
exp <- "exp_lt" # experiment: 'exp_ts' (task-conding) or 'exp_lt' (learning transfer)
label_sz <- 10
# data
fnl <- file.path(project_path, "res", paste(paste(exp, "maggi-k4", sep = "_"), ".csv", sep = ""))
res <- read.csv(fnl)
res <- res %>% mutate(context = case_when(context < 3 ~ context, context==3~1, context==4~2))
pl <- list()
pl[[1]] <- res %>% filter(ses==1) %>%
ggplot() +
geom_density(aes(x=k4_onset, colour = factor(context)), linewidth = 1) +
guides(linetype=FALSE) +
theme_minimal() +
scale_color_brewer(
name = "Context",
labels = c("1","2")
) +
labs(title = "Learn Phase", x = "K4 Onset", y = "Density") +
theme(
plot.title = element_text(size = label_sz),
axis.text.x = element_text(size = label_sz), axis.text.y = element_text(size = label_sz), legend.text = element_text(size = label_sz),
axis.title.x = element_text(size = label_sz), axis.title.y = element_text(size = label_sz), legend.title = element_text(size = label_sz)
)
pl[[2]] <- res %>% filter(ses==3) %>%
ggplot() +
geom_density(aes(x=k4_onset, colour = factor(transfer)), linewidth = 1) +
guides(linetype=FALSE) +
theme_minimal() +
scale_color_brewer(
name = "Transfer",
labels = c("Full","Partial")
) +
labs(title = "Test Phase", x = "K4 Onset", y = "Density") +
theme(
plot.title = element_text(size = label_sz),
axis.text.x = element_text(size = label_sz), axis.text.y = element_text(size = label_sz), legend.text = element_text(size = label_sz),
axis.title.x = element_text(size = label_sz), axis.title.y = element_text(size = label_sz), legend.title = element_text(size = label_sz)
)
ggarrange(plotlist=pl,nrow=1,ncol=2)
fnl <- file.path(project_path, "fig", paste(paste(exp, "k4-distributions", sep = "_"), ".png", sep = ""))
ggsave(fnl, plot = last_plot(), width = 15, height = 8, limitsize = FALSE)
# lydia barnes, august 2024
# views k4 onset in learn and test phase
library(tidyverse)
library(ggforce)
library(ggsci)
library(ggpubr)
project_path <- getwd()
# settings
exp <- "exp_lt" # experiment: 'exp_ts' (task-conding) or 'exp_lt' (learning transfer)
label_sz <- 10
# data
fnl <- file.path(project_path, "res", paste(paste(exp, "maggi-k4", sep = "_"), ".csv", sep = ""))
res <- read.csv(fnl)
res <- res %>% mutate(context = case_when(context < 3 ~ context, context==3~1, context==4~2))
pl <- list()
pl[[1]] <- res %>% filter(ses==1) %>%
ggplot() +
geom_density(aes(x=k4_onset, colour = factor(context)), linewidth = 1) +
guides(linetype=FALSE) +
theme_minimal() +
scale_color_brewer(
name = "Context",
labels = c("1","2")
) +
labs(title = "Learn Phase", x = "K4 Onset", y = "Density") +
theme(
plot.title = element_text(size = label_sz),
axis.text.x = element_text(size = label_sz), axis.text.y = element_text(size = label_sz), legend.text = element_text(size = label_sz),
axis.title.x = element_text(size = label_sz), axis.title.y = element_text(size = label_sz), legend.title = element_text(size = label_sz)
)
pl[[2]] <- res %>% filter(ses==3) %>%
ggplot() +
geom_density(aes(x=k4_onset, colour = factor(transfer)), linewidth = 1) +
guides(linetype=FALSE) +
theme_minimal() +
scale_color_brewer(
name = "Transfer",
labels = c("Full","Partial")
) +
labs(title = "Test Phase", x = "K4 Onset", y = "Density") +
theme(
plot.title = element_text(size = label_sz),
axis.text.x = element_text(size = label_sz), axis.text.y = element_text(size = label_sz), legend.text = element_text(size = label_sz),
axis.title.x = element_text(size = label_sz), axis.title.y = element_text(size = label_sz), legend.title = element_text(size = label_sz)
)
ggarrange(plotlist=pl,nrow=1,ncol=2)
fnl <- file.path(project_path, "fig", paste(paste(exp, "k4-distributions", sep = "_"), ".pdf", sep = ""))
ggsave(fnl, plot = last_plot(), width = 15, height = 8, limitsize = FALSE)
library(tidyverse)
library(ggforce)
library(ggsci)
library(ggpubr)
project_path <- getwd()
# settings
exp <- "exp_ts" # experiment: 'exp_ts' (task-conding) or 'exp_lt' (learning transfer)
ses <- "ses-test" # session: 'ses-learn','ses-train','ses-test'
label_sz <- 10
# data
fnl <- file.path(project_path, "res", paste(paste(exp, "trl", sep = "_"), ".csv", sep = ""))
res <- read.csv(fnl)
View(res)
?innerjoin
?? innerjoin
library(tidyverse)
?innerjoin
?? innerjoin
res <- res %>% group_by(sid) %>% filter(is.finite(k4_onset))
fnl <- file.path(project_path, "res", paste(paste(exp, "maggi-k4", sep = "_"), ".csv", sep = ""))
res <- read.csv(fnl)
res <- res %>% group_by(sid) %>% filter(is.finite(k4_onset))
View(res)
reject <- res %>% filter(is.infinite(k4_onset)) %>% pull(sid)
reject
res <- read.csv(fnl)
reject <- res %>% filter(is.infinite(k4_onset)) %>% pull(sid)
reject <- res %>% filter(is.infinite(k4_onset)) %>% pull(sid) %>% unique()
res <- res %>% filter(!sid==reject)
1==reject
res <- res %>% filter(!any(sid==reject))
res <- read.csv(fnl)
reject <- res %>% filter(is.infinite(k4_onset)) %>% pull(sid) %>% unique()
reject
any(2==reject)
any(1==reject)
!any(res$sid==reject)
which(sid==reject)
which(1==reject)
which(res$sid==reject)
which(res$sid in reject)
which(res$sid %in% reject)
which(res$sid !%in% reject)
which(res$sid %!in% reject)
!which(res$sid %in% reject)
!which(res$sid !in reject)
match(reject,res$sid)
res$sid==2
which(res$sid==2)
reject <- which(res$sid)
reject <- which(res$sid %in% reject)
res <- res %>% filter(!reject)
res <- res %>% filter(X!=reject)
? pivot_wider
res <- res %>%
mutate(session_name = case_when(ses==1~"learn",ses==3~test)) %>%
pivot_wider(names_from = session_name, values_from = k4_onset)
res <- res %>%
mutate(session_name = case_when(ses==1~"learn",ses==3~"test")) %>%
pivot_wider(names_from = session_name, values_from = k4_onset)
res <- read.csv(fnl)
res <- res %>%
mutate(context = case_when(context==1~1,context==2~2,transfer==1~1,transfer==2~2)) %>%
mutate(session_name = case_when(ses==1~"learn",ses==3~"test")) %>%
pivot_wider(names_from = session_name, values_from = k4_onset)
res <- read.csv(fnl)
res <- res %>%
mutate(context = case_when(context==1~1,context==2~2,transfer==1~1,transfer==2~2)) %>%
mutate(session_name = case_when(ses==1~"learn",ses==3~"test")) %>%
select(!transfer,!ses) %>%
pivot_wider(names_from = session_name, values_from = k4_onset)
res <- read.csv(fnl)
res <- res %>%
mutate(context = case_when(context==1~1,context==2~2,transfer==1~1,transfer==2~2)) %>%
mutate(session_name = case_when(ses==1~"learn",ses==3~"test")) %>%
select(!ses,!transfer) %>%
pivot_wider(names_from = session_name, values_from = k4_onset)
res <- read.csv(fnl)
res <- res %>%
mutate(context = case_when(context==1~1,context==2~2,transfer==1~1,transfer==2~2)) %>%
mutate(session_name = case_when(ses==1~"learn",ses==3~"test")) %>%
select(c(!ses,!transfer)) %>%
pivot_wider(names_from = session_name, values_from = k4_onset)
res <- read.csv(fnl)
res <- res %>%
mutate(context = case_when(context==1~1,context==2~2,transfer==1~1,transfer==2~2)) %>%
mutate(session_name = case_when(ses==1~"learn",ses==3~"test")) %>%
select(!c(ses,transfer)) %>%
pivot_wider(names_from = session_name, values_from = k4_onset)
res <- read.csv(fnl)
res <- res %>%
mutate(context = case_when(context==1~1,context==2~2,transfer==1~1,transfer==2~2)) %>%
mutate(session_name = case_when(ses==1~"learn",ses==3~"test")) %>%
select(!c(X,ses,transfer)) %>%
pivot_wider(names_from = session_name, values_from = k4_onset)
res <- read.csv(fnl)
res <- res %>%
mutate(context = case_when(context==1~1,context==2~2,transfer==1~1,transfer==2~2)) %>%
mutate(session_name = case_when(ses==1~"learn",ses==3~"test")) %>%
select(!c(X,ses,transfer,nclicks)) %>%
pivot_wider(names_from = session_name, values_from = k4_onset)
res <- read.csv(fnl)
res <- res %>%
mutate(context = case_when(context==1~1,context==2~2,transfer==1~1,transfer==2~2)) %>%
mutate(session_name = case_when(ses==1~"learn",ses==3~"test")) %>%
select(!c(X,ses,transfer,nclicks)) %>%
pivot_wider(names_from = session_name, values_from = k4_onset) %>%
mutate(context_name = case_when(context==1~"A",context==2~"B")) %>%
select(!context) %>%
pivot_wider(names_from = context_name, values_from = c(learn,test))
res <- res %>% filter(if_any(everything(), ~ !is.na(.)))
res <- res %>% filter(if_any(everything(), ~ !is.infinite(.)))
res <- res %>% filter(if_any(!is.finite(.)))
res <- res %>% filter(if_any(everything(), ~ !is.finite(.)))
res <- res %>% filter(if_any(!is.finite))
res <- res %>% filter(if_all(everything(),is.finite))
res <- read.csv(fnl)
res <- res %>%
mutate(context = case_when(context==1~1,context==2~2,transfer==1~1,transfer==2~2)) %>%
mutate(session_name = case_when(ses==1~"learn",ses==3~"test")) %>%
select(!c(X,ses,transfer,nclicks)) %>%
pivot_wider(names_from = session_name, values_from = k4_onset) %>%
mutate(context_name = case_when(context==1~"A",context==2~"B")) %>%
select(!context) %>%
pivot_wider(names_from = context_name, values_from = c(learn,test))
res <- res %>% filter(if_all(learn_A:test_B,is.finite))
res <- res %>% pivot_longer(names_to = context)
res <- res %>% pivot_longer(names_to = "context")
? pivot_longer
res <- res %>% pivot_longer(names_to = "context", values_to = "k4")
res <- res %>% pivot_longer(cols = learn_A:test_B, names_to = c("context","phase"), values_to = "k4")
res <- res %>% pivot_longer(cols = learn_A:test_B, names_to = c("context","phase"), names_pattern = "_", values_to = "k4")
res <- res %>% pivot_longer(cols = learn_A:test_B, names_to = c("context","phase"), names_sep = "_", values_to = "k4")
res <- read.csv(fnl)
res <- res %>%
mutate(context = case_when(context==1~1,context==2~2,transfer==1~1,transfer==2~2)) %>%
mutate(session_name = case_when(ses==1~"learn",ses==3~"test")) %>%
select(!c(X,ses,transfer,nclicks)) %>%
pivot_wider(names_from = session_name, values_from = k4_onset) %>%
mutate(context_name = case_when(context==1~"A",context==2~"B")) %>%
select(!context) %>%
pivot_wider(names_from = context_name, values_from = c(learn,test))
res <- res %>% filter(if_all(learn_A:test_B,is.finite))
res <- res %>% pivot_longer(cols = learn_A:test_B, names_to = c("phase","context"), names_sep = "_", values_to = "k4")
res %>%
ggplot() +
geom_violin(aes(x = phase, y = k4, colour = context)) +
stat_summary(
aes(x = phase, y = k4, colour = context),
fun.data = "mean_cl_normal",geom = "pointrange", position = position_dodge(width = .9), linewidth = 1, size = mk_sz/2) +
stat_summary(
aes(x = phase, y = k4, colour = context),
fun = "mean", geom = "line", position = position_dodge(width = 0.9), linewidth = 1, alpha = 1
) +
# tidy
theme_minimal() +
scale_color_lancet(
name = "Context",
) +
scale_x_discrete(
#labels = c("Low Switch", "High Switch")
) +
labs(
title = "", x = "Phase", y = "K4 Onset"
) +
theme(
plot.title = element_text(size = label_sz),
axis.text.x = element_text(size = label_sz), axis.text.y = element_text(size = label_sz), legend.text = element_text(size = label_sz),
axis.title.x = element_text(size = label_sz), axis.title.y = element_text(size = label_sz), legend.title = element_text(size = label_sz)
)
label_sz <- 20
mk_sz <- 2
res %>%
ggplot() +
geom_violin(aes(x = phase, y = k4, colour = context)) +
stat_summary(
aes(x = phase, y = k4, colour = context),
fun.data = "mean_cl_normal",geom = "pointrange", position = position_dodge(width = .9), linewidth = 1, size = mk_sz/2) +
stat_summary(
aes(x = phase, y = k4, colour = context),
fun = "mean", geom = "line", position = position_dodge(width = 0.9), linewidth = 1, alpha = 1
) +
# tidy
theme_minimal() +
scale_color_lancet(
name = "Context",
) +
scale_x_discrete(
#labels = c("Low Switch", "High Switch")
) +
labs(
title = "", x = "Phase", y = "K4 Onset"
) +
theme(
plot.title = element_text(size = label_sz),
axis.text.x = element_text(size = label_sz), axis.text.y = element_text(size = label_sz), legend.text = element_text(size = label_sz),
axis.title.x = element_text(size = label_sz), axis.title.y = element_text(size = label_sz), legend.title = element_text(size = label_sz)
)
# lydia barnes, august 2024
### sources
library(tidyverse)
library(ggforce)
library(ggsci)
library(ggpubr)
# essentials
project_path <- getwd()
# settings
exp <- "exp_lt"
label_sz <- 20
mk_sz <- 2
fnl <- file.path(project_path, "res", paste(paste(exp, "maggi-k4", sep = "_"), ".csv", sep = ""))
res <- read.csv(fnl)
res <- res %>%
mutate(context = case_when(context==1~1,context==2~2,transfer==1~1,transfer==2~2)) %>%
mutate(session_name = case_when(ses==1~"learn",ses==3~"test")) %>%
select(!c(X,ses,transfer,nclicks)) %>%
pivot_wider(names_from = session_name, values_from = k4_onset) %>%
mutate(context_name = case_when(context==1~"A",context==2~"B")) %>%
select(!context) %>%
pivot_wider(names_from = context_name, values_from = c(learn,test))
res <- res %>% filter(if_all(learn_A:test_B,is.finite))
res <- res %>% pivot_longer(cols = learn_A:test_B, names_to = c("phase","context"), names_sep = "_", values_to = "k4")
res %>%
ggplot() +
geom_violin(aes(x = phase, y = k4, colour = context)) +
stat_summary(
aes(x = phase, y = k4, colour = context),
fun.data = "mean_cl_normal",geom = "pointrange", position = position_dodge(width = .9), linewidth = 1, size = mk_sz/2) +
stat_summary(
aes(x = phase, y = k4, colour = context),
fun = "mean", geom = "line", position = position_dodge(width = 0.9), linewidth = 1, alpha = 1
) +
# tidy
theme_minimal() +
scale_color_lancet(
name = "Context",
) +
scale_x_discrete(
#labels = c("Low Switch", "High Switch")
) +
labs(
title = "", x = "Phase", y = "K4 Onset"
) +
theme(
plot.title = element_text(size = label_sz),
axis.text.x = element_text(size = label_sz), axis.text.y = element_text(size = label_sz), legend.text = element_text(size = label_sz),
axis.title.x = element_text(size = label_sz), axis.title.y = element_text(size = label_sz), legend.title = element_text(size = label_sz)
)
fnl <- file.path(project_path, "fig", paste(paste(exp, "k4", sep = "_"), ".pdf",
sep = ""
))
ggsave(fnl, plot = last_plot(),width=8,height=8)
res <- read.csv(fnl)
res <- res %>%
mutate(context = case_when(context==1~1,context==2~2,transfer==1~1,transfer==2~2)) %>%
mutate(session_name = case_when(ses==1~"learn",ses==3~"test")) %>%
select(!c(X,ses,transfer,nclicks)) %>%
pivot_wider(names_from = session_name, values_from = k4_onset) %>%
mutate(context_name = case_when(context==1~"A",context==2~"B")) %>%
select(!context) %>%
pivot_wider(names_from = context_name, values_from = c(learn,test))
fnl <- file.path(project_path, "res", paste(paste(exp, "maggi-k4", sep = "_"), ".csv", sep = ""))
res <- read.csv(fnl)
res <- res %>%
mutate(context = case_when(context==1~1,context==2~2,transfer==1~1,transfer==2~2)) %>%
mutate(session_name = case_when(ses==1~"learn",ses==3~"test")) %>%
select(!c(X,ses,transfer,nclicks)) %>%
pivot_wider(names_from = session_name, values_from = k4_onset) %>%
mutate(context_name = case_when(context==1~"A",context==2~"B")) %>%
select(!context) %>%
pivot_wider(names_from = context_name, values_from = c(learn,test))
