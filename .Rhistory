### sources
library(tidyverse)
source(file.path(getwd(), "src-stereo", "count_stereo.R"))
### settings
version <- "study-01"  #pilot-data-00 (train and test), pilot-data-01 (learn and train), pilot-data-02 (learn and train, learn phase split into two parts)
exp <- "exp_lt"  #experiment: 'exp_ts' (task-switching) or 'exp_lt' (learning transfer)
mes <- "clicks"  #measure: 'clicks' or 'hovers'. usually want 'clicks'.
### paths
project_path <- getwd()
data_path <- file.path(project_path, "res")
if (!dir.exists(data_path)) {
stop(paste0(data_path, " does not exist"))
}
### load event data
fnl <- file.path(data_path, paste(paste(version, exp, mes, "evt", sep = "_"), ".csv", sep = "") )
data <- read_csv(fnl, show_col_types = FALSE)
### load shortest path data
fnl <- file.path(data_path, paste(paste(version, exp, mes, "opt-path", sep = "_"), ".csv", sep = ""))
opt <- read_csv(fnl, show_col_types = FALSE)
opt <- opt %>%
filter(algorithm == 'tsp')
fnl <- file.path(project_path,'src-paths','graph.csv')
graph <- read_csv(fnl,col_names = FALSE,show_col_types = FALSE)
### extract stereotypy metrics
counts <- count_stereo(data,opt,graph)
# save to file
fnl <- file.path(project_path, "res", paste(paste(version, exp, mes, "reclicks", sep = "_"), ".csv",
sep = ""))
write_csv(counts[[1]], fnl)
fnl <- file.path(project_path, "res", paste(paste(version, exp, mes, "transitions", sep = "_"), ".csv",
sep = ""))
write_csv(counts[[2]], fnl)
fnl <- file.path(project_path, "res", paste(paste(version,exp,mes,"travelled",sep="_"),".csv",sep=""))
write_csv(counts[[3]],fnl)
### cluster participants based on stereotypy and accuracy
### use maggi method to trace change in stereotypy (extent or type)
# lydia barnes, may 2024 counts, clusters, and/or traces stereotypical behaviour during training to
# explain performance at test
# TODO:
# consider whether true path should include all clicked doors, or current-context only. that is, do we
# want to ask, "as people move within this context, what route do they take?", or "as people attempt
# the search task, what route do they take?" i *think* we only care about current-context doors.
### sources
library(tidyverse)
source(file.path(getwd(), "src-stereo", "count_stereo.R"))
### settings
version <- "study-01"  #pilot-data-00 (train and test), pilot-data-01 (learn and train), pilot-data-02 (learn and train, learn phase split into two parts)
exp <- "exp_lt"  #experiment: 'exp_ts' (task-switching) or 'exp_lt' (learning transfer)
mes <- "clicks"  #measure: 'clicks' or 'hovers'. usually want 'clicks'.
### paths
project_path <- getwd()
data_path <- file.path(project_path, "res")
if (!dir.exists(data_path)) {
stop(paste0(data_path, " does not exist"))
}
### load event data
fnl <- file.path(data_path, paste(paste(version, exp, mes, "evt", sep = "_"), ".csv", sep = "") )
data <- read_csv(fnl, show_col_types = FALSE)
### load shortest path data
fnl <- file.path(data_path, paste(paste(version, exp, mes, "opt-path", sep = "_"), ".csv", sep = ""))
opt <- read_csv(fnl, show_col_types = FALSE)
opt <- opt %>%
filter(algorithm == 'tsp')
fnl <- file.path(project_path,'src-paths','graph.csv')
graph <- read_csv(fnl,col_names = FALSE,show_col_types = FALSE)
### extract stereotypy metrics
counts <- count_stereo(data,opt,graph)
# lydia barnes, may 2024 counts, clusters, and/or traces stereotypical behaviour during training to
# explain performance at test
# TODO:
# consider whether true path should include all clicked doors, or current-context only. that is, do we
# want to ask, "as people move within this context, what route do they take?", or "as people attempt
# the search task, what route do they take?" i *think* we only care about current-context doors.
### sources
library(tidyverse)
source(file.path(getwd(), "src-stereo", "count_stereo.R"))
### settings
version <- "study-01"  #pilot-data-00 (train and test), pilot-data-01 (learn and train), pilot-data-02 (learn and train, learn phase split into two parts)
exp <- "exp_lt"  #experiment: 'exp_ts' (task-switching) or 'exp_lt' (learning transfer)
mes <- "clicks"  #measure: 'clicks' or 'hovers'. usually want 'clicks'.
### paths
project_path <- getwd()
data_path <- file.path(project_path, "res")
if (!dir.exists(data_path)) {
stop(paste0(data_path, " does not exist"))
}
### load event data
fnl <- file.path(data_path, paste(paste(version, exp, mes, "evt", sep = "_"), ".csv", sep = "") )
data <- read_csv(fnl, show_col_types = FALSE)
### load shortest path data
fnl <- file.path(data_path, paste(paste(version, exp, mes, "opt-path", sep = "_"), ".csv", sep = ""))
opt <- read_csv(fnl, show_col_types = FALSE)
opt <- opt %>%
filter(algorithm == 'tsp')
fnl <- file.path(project_path,'src-paths','graph.csv')
graph <- read_csv(fnl,col_names = FALSE,show_col_types = FALSE)
### extract stereotypy metrics
counts <- count_stereo(data,opt,graph)
length(clicks)
trial <- trial %>% filter(door_cc==1)
selected <- unique(trial$door)
clicks <- trial$door
j <- min(c(length(clicks),4)) #if there are 4 or fewer clicks, take that number. otherwise, only consider first 4 clicks
searching <- TRUE
while(searching){
print(searching)
print(j)
for (sol in unique(opt_sub$solution)){
solution <- opt_sub$door[opt_sub$solution==sol]
if (all(solution[1:j])==clicks[1:j]){
searching <- FALSE
break
}
}
if(searching==FALSE){break}
j <- j-1
}
length(clicks)
j
unique(opt_sub$solution)
solution[1:j])
solution[1:j]
clicks[1:j]
j <- min(c(length(clicks),4)) #if there are 4 or fewer clicks, take that number. otherwise, only consider first 4 clicks
searching <- TRUE
while(searching){
print(searching)
print(j)
for (sol in unique(opt_sub$solution)){
solution <- opt_sub$door[opt_sub$solution==sol]
if (all(solution[1:j]==clicks[1:j])){
searching <- FALSE
break
}
}
if(searching==FALSE){break}
j <- j-1
}
# find a corresponding shortest path solution that matches on as many doors as possible
j <- min(c(length(clicks),4)) #if there are 4 or fewer clicks, take that number. otherwise, only consider first 4 clicks
searching <- TRUE
while(searching){
print(searching)
print(j)
for (sol in unique(opt_sub$solution)){
solution <- opt_sub$door[opt_sub$solution==sol]
if (all(solution[1:j]==clicks[1:j])){
searching <- FALSE
break
}
}
if(searching==FALSE){break}else{j <- j-1}
}
tr <- 1
# find a corresponding shortest path solution that matches on as many doors as possible
j <- min(c(length(clicks),4)) #if there are 4 or fewer clicks, take that number. otherwise, only consider first 4 clicks
searching <- TRUE
while(searching){
print(searching)
print(j)
for (sol in unique(opt_sub$solution)){
solution <- opt_sub$door[opt_sub$solution==sol]
if (all(solution[1:j]==clicks[1:j])){
searching <- FALSE
break
}
}
if(searching==FALSE){break}else{j <- j-1}
}
# lydia barnes, may 2024 counts, clusters, and/or traces stereotypical behaviour during training to
# explain performance at test
# TODO:
# consider whether true path should include all clicked doors, or current-context only. that is, do we
# want to ask, "as people move within this context, what route do they take?", or "as people attempt
# the search task, what route do they take?" i *think* we only care about current-context doors.
### sources
library(tidyverse)
source(file.path(getwd(), "src-stereo", "count_stereo.R"))
### settings
version <- "study-01"  #pilot-data-00 (train and test), pilot-data-01 (learn and train), pilot-data-02 (learn and train, learn phase split into two parts)
exp <- "exp_lt"  #experiment: 'exp_ts' (task-switching) or 'exp_lt' (learning transfer)
mes <- "clicks"  #measure: 'clicks' or 'hovers'. usually want 'clicks'.
### paths
project_path <- getwd()
data_path <- file.path(project_path, "res")
if (!dir.exists(data_path)) {
stop(paste0(data_path, " does not exist"))
}
### load event data
fnl <- file.path(data_path, paste(paste(version, exp, mes, "evt", sep = "_"), ".csv", sep = "") )
data <- read_csv(fnl, show_col_types = FALSE)
### load shortest path data
fnl <- file.path(data_path, paste(paste(version, exp, mes, "opt-path", sep = "_"), ".csv", sep = ""))
opt <- read_csv(fnl, show_col_types = FALSE)
opt <- opt %>%
filter(algorithm == 'tsp')
fnl <- file.path(project_path,'src-paths','graph.csv')
graph <- read_csv(fnl,col_names = FALSE,show_col_types = FALSE)
### extract stereotypy metrics
counts <- count_stereo(data,opt,graph)
# lydia barnes, may 2024 counts, clusters, and/or traces stereotypical behaviour during training to
# explain performance at test
# TODO:
# consider whether true path should include all clicked doors, or current-context only. that is, do we
# want to ask, "as people move within this context, what route do they take?", or "as people attempt
# the search task, what route do they take?" i *think* we only care about current-context doors.
### sources
library(tidyverse)
source(file.path(getwd(), "src-stereo", "count_stereo.R"))
### settings
version <- "study-01"  #pilot-data-00 (train and test), pilot-data-01 (learn and train), pilot-data-02 (learn and train, learn phase split into two parts)
exp <- "exp_lt"  #experiment: 'exp_ts' (task-switching) or 'exp_lt' (learning transfer)
mes <- "clicks"  #measure: 'clicks' or 'hovers'. usually want 'clicks'.
### paths
project_path <- getwd()
data_path <- file.path(project_path, "res")
if (!dir.exists(data_path)) {
stop(paste0(data_path, " does not exist"))
}
### load event data
fnl <- file.path(data_path, paste(paste(version, exp, mes, "evt", sep = "_"), ".csv", sep = "") )
data <- read_csv(fnl, show_col_types = FALSE)
### load shortest path data
fnl <- file.path(data_path, paste(paste(version, exp, mes, "opt-path", sep = "_"), ".csv", sep = ""))
opt <- read_csv(fnl, show_col_types = FALSE)
opt <- opt %>%
filter(algorithm == 'tsp')
fnl <- file.path(project_path,'src-paths','graph.csv')
graph <- read_csv(fnl,col_names = FALSE,show_col_types = FALSE)
### extract stereotypy metrics
counts <- count_stereo(data,opt,graph)
tr <- 43
co <- 2
trial <- events %>% filter(t==tr)
View(events)
x <- unique(events$t)
View(events)
# lydia barnes, may 2024 counts, clusters, and/or traces stereotypical behaviour during training to
# explain performance at test
# TODO:
# consider whether true path should include all clicked doors, or current-context only. that is, do we
# want to ask, "as people move within this context, what route do they take?", or "as people attempt
# the search task, what route do they take?" i *think* we only care about current-context doors.
### sources
library(tidyverse)
source(file.path(getwd(), "src-stereo", "count_stereo.R"))
### settings
version <- "study-01"  #pilot-data-00 (train and test), pilot-data-01 (learn and train), pilot-data-02 (learn and train, learn phase split into two parts)
exp <- "exp_lt"  #experiment: 'exp_ts' (task-switching) or 'exp_lt' (learning transfer)
mes <- "clicks"  #measure: 'clicks' or 'hovers'. usually want 'clicks'.
### paths
project_path <- getwd()
data_path <- file.path(project_path, "res")
if (!dir.exists(data_path)) {
stop(paste0(data_path, " does not exist"))
}
### load event data
fnl <- file.path(data_path, paste(paste(version, exp, mes, "evt", sep = "_"), ".csv", sep = "") )
data <- read_csv(fnl, show_col_types = FALSE)
### load shortest path data
fnl <- file.path(data_path, paste(paste(version, exp, mes, "opt-path", sep = "_"), ".csv", sep = ""))
opt <- read_csv(fnl, show_col_types = FALSE)
opt <- opt %>%
filter(algorithm == 'tsp')
fnl <- file.path(project_path,'src-paths','graph.csv')
graph <- read_csv(fnl,col_names = FALSE,show_col_types = FALSE)
### extract stereotypy metrics
counts <- count_stereo(data,opt,graph)
ss <- 2
trial <- events %>% filter(t==tr)
events <- data %>%
filter(switch == 0, sub == su, ses == se, context == co, door_cc == 1, subses ==
ss)
trial <- events %>% filter(t==tr)
# lydia barnes, may 2024 counts, clusters, and/or traces stereotypical behaviour during training to
# explain performance at test
# TODO:
# consider whether true path should include all clicked doors, or current-context only. that is, do we
# want to ask, "as people move within this context, what route do they take?", or "as people attempt
# the search task, what route do they take?" i *think* we only care about current-context doors.
### sources
library(tidyverse)
source(file.path(getwd(), "src-stereo", "count_stereo.R"))
### settings
version <- "study-01"  #pilot-data-00 (train and test), pilot-data-01 (learn and train), pilot-data-02 (learn and train, learn phase split into two parts)
exp <- "exp_lt"  #experiment: 'exp_ts' (task-switching) or 'exp_lt' (learning transfer)
mes <- "clicks"  #measure: 'clicks' or 'hovers'. usually want 'clicks'.
### paths
project_path <- getwd()
data_path <- file.path(project_path, "res")
if (!dir.exists(data_path)) {
stop(paste0(data_path, " does not exist"))
}
### load event data
fnl <- file.path(data_path, paste(paste(version, exp, mes, "evt", sep = "_"), ".csv", sep = "") )
data <- read_csv(fnl, show_col_types = FALSE)
### load shortest path data
fnl <- file.path(data_path, paste(paste(version, exp, mes, "opt-path", sep = "_"), ".csv", sep = ""))
opt <- read_csv(fnl, show_col_types = FALSE)
opt <- opt %>%
filter(algorithm == 'tsp')
fnl <- file.path(project_path,'src-paths','graph.csv')
graph <- read_csv(fnl,col_names = FALSE,show_col_types = FALSE)
### extract stereotypy metrics
counts <- count_stereo(data,opt,graph)
# lydia barnes, may 2024 counts, clusters, and/or traces stereotypical behaviour during training to
# explain performance at test
# TODO:
# consider whether true path should include all clicked doors, or current-context only. that is, do we
# want to ask, "as people move within this context, what route do they take?", or "as people attempt
# the search task, what route do they take?" i *think* we only care about current-context doors.
### sources
library(tidyverse)
source(file.path(getwd(), "src-stereo", "count_stereo.R"))
### settings
version <- "study-01"  #pilot-data-00 (train and test), pilot-data-01 (learn and train), pilot-data-02 (learn and train, learn phase split into two parts)
exp <- "exp_lt"  #experiment: 'exp_ts' (task-switching) or 'exp_lt' (learning transfer)
mes <- "clicks"  #measure: 'clicks' or 'hovers'. usually want 'clicks'.
### paths
project_path <- getwd()
data_path <- file.path(project_path, "res")
if (!dir.exists(data_path)) {
stop(paste0(data_path, " does not exist"))
}
### load event data
fnl <- file.path(data_path, paste(paste(version, exp, mes, "evt", sep = "_"), ".csv", sep = "") )
data <- read_csv(fnl, show_col_types = FALSE)
### load shortest path data
fnl <- file.path(data_path, paste(paste(version, exp, mes, "opt-path", sep = "_"), ".csv", sep = ""))
opt <- read_csv(fnl, show_col_types = FALSE)
opt <- opt %>%
filter(algorithm == 'tsp')
fnl <- file.path(project_path,'src-paths','graph.csv')
graph <- read_csv(fnl,col_names = FALSE,show_col_types = FALSE)
### extract stereotypy metrics
counts <- count_stereo(data,opt,graph)
# lydia barnes, may 2024 counts, clusters, and/or traces stereotypical behaviour during training to
# explain performance at test
# TODO:
# consider whether true path should include all clicked doors, or current-context only. that is, do we
# want to ask, "as people move within this context, what route do they take?", or "as people attempt
# the search task, what route do they take?" i *think* we only care about current-context doors.
### sources
library(tidyverse)
source(file.path(getwd(), "src-stereo", "count_stereo.R"))
### settings
version <- "study-01"  #pilot-data-00 (train and test), pilot-data-01 (learn and train), pilot-data-02 (learn and train, learn phase split into two parts)
exp <- "exp_lt"  #experiment: 'exp_ts' (task-switching) or 'exp_lt' (learning transfer)
mes <- "clicks"  #measure: 'clicks' or 'hovers'. usually want 'clicks'.
### paths
project_path <- getwd()
data_path <- file.path(project_path, "res")
if (!dir.exists(data_path)) {
stop(paste0(data_path, " does not exist"))
}
### load event data
fnl <- file.path(data_path, paste(paste(version, exp, mes, "evt", sep = "_"), ".csv", sep = "") )
data <- read_csv(fnl, show_col_types = FALSE)
### load shortest path data
fnl <- file.path(data_path, paste(paste(version, exp, mes, "opt-path", sep = "_"), ".csv", sep = ""))
opt <- read_csv(fnl, show_col_types = FALSE)
opt <- opt %>%
filter(algorithm == 'tsp')
fnl <- file.path(project_path,'src-paths','graph.csv')
graph <- read_csv(fnl,col_names = FALSE,show_col_types = FALSE)
### extract stereotypy metrics
counts <- count_stereo(data,opt,graph)
ses <- 3
co <- 2
ss <- 2
events <- data %>%
filter(switch == 0, sub == su, ses == se, context == co, door_cc == 1, subses ==
ss)
View(events)
opt_sub <- opt %>%
filter(sub == su, context == co)
trial <- events %>% filter(t==tr)
tr
unique(events$t
)
tr <- 85
trial <- events %>% filter(t==tr)
View(trial)
match <- 0
for (sol in unique(opt_sub$solution)){
solution <- opt_sub$door[opt_sub$solution==sol]
if (all(solution[1:length(trial$door)]==trial$door)){
match <- 1
break
}
}
trial <- trial %>% filter(door_cc==1)
selected <- unique(trial$door)
clicks <- trial$door
j <- min(c(length(clicks),4)) #if there are 4 or fewer clicks, take that number. otherwise, only consider first 4 clicks
searching <- TRUE
unique(opt_sub$solution)
sol <- 1
solution <- opt_sub$door[opt_sub$solution==sol]
solution
solution[1:j]==clicks[1:j]
solution[1:j]
clicks[1:j]
for (sol in unique(opt_sub$solution)){
solution <- opt_sub$door[opt_sub$solution==sol]
if (all(solution[1:j]==clicks[1:j])){
searching <- FALSE
break
}
}
# lydia barnes, may 2024 counts, clusters, and/or traces stereotypical behaviour during training to
# explain performance at test
# TODO:
# consider whether true path should include all clicked doors, or current-context only. that is, do we
# want to ask, "as people move within this context, what route do they take?", or "as people attempt
# the search task, what route do they take?" i *think* we only care about current-context doors.
### sources
library(tidyverse)
source(file.path(getwd(), "src-stereo", "count_stereo.R"))
### settings
version <- "study-01"  #pilot-data-00 (train and test), pilot-data-01 (learn and train), pilot-data-02 (learn and train, learn phase split into two parts)
exp <- "exp_lt"  #experiment: 'exp_ts' (task-switching) or 'exp_lt' (learning transfer)
mes <- "clicks"  #measure: 'clicks' or 'hovers'. usually want 'clicks'.
### paths
project_path <- getwd()
data_path <- file.path(project_path, "res")
if (!dir.exists(data_path)) {
stop(paste0(data_path, " does not exist"))
}
### load event data
fnl <- file.path(data_path, paste(paste(version, exp, mes, "evt", sep = "_"), ".csv", sep = "") )
data <- read_csv(fnl, show_col_types = FALSE)
### load shortest path data
fnl <- file.path(data_path, paste(paste(version, exp, mes, "opt-path", sep = "_"), ".csv", sep = ""))
opt <- read_csv(fnl, show_col_types = FALSE)
opt <- opt %>%
filter(algorithm == 'tsp')
fnl <- file.path(project_path,'src-paths','graph.csv')
graph <- read_csv(fnl,col_names = FALSE,show_col_types = FALSE)
### extract stereotypy metrics
counts <- count_stereo(data,opt,graph)
se <- 3
tr <- 43
events <- data %>%
filter(switch == 0, sub == su, ses == se, context == co, door_cc == 1, subses ==
ss)
opt_sub <- opt %>%
filter(sub == su, context == co)
trial <- events %>% filter(t==tr)
View(trial)
# do their clicks match a shortest path?
match <- 0
for (sol in unique(opt_sub$solution)){
solution <- opt_sub$door[opt_sub$solution==sol]
if (all(solution[1:length(trial$door)]==trial$door)){
match <- 1
break
}
}
trial <- trial %>% filter(door_cc==1)
selected <- unique(trial$door)
clicks <- trial$door
j <- min(c(length(clicks),4))
searching <- TRUE
unique(opt_sub$solution)
sol
sol <- 1
solution <- opt_sub$door[opt_sub$solution==sol]
solution
View(opt_sub)
# lydia barnes, may 2024 counts, clusters, and/or traces stereotypical behaviour during training to
# explain performance at test
# TODO:
# consider whether true path should include all clicked doors, or current-context only. that is, do we
# want to ask, "as people move within this context, what route do they take?", or "as people attempt
# the search task, what route do they take?" i *think* we only care about current-context doors.
### sources
library(tidyverse)
source(file.path(getwd(), "src-stereo", "count_stereo.R"))
### settings
version <- "study-01"  #pilot-data-00 (train and test), pilot-data-01 (learn and train), pilot-data-02 (learn and train, learn phase split into two parts)
exp <- "exp_lt"  #experiment: 'exp_ts' (task-switching) or 'exp_lt' (learning transfer)
mes <- "clicks"  #measure: 'clicks' or 'hovers'. usually want 'clicks'.
### paths
project_path <- getwd()
data_path <- file.path(project_path, "res")
if (!dir.exists(data_path)) {
stop(paste0(data_path, " does not exist"))
}
### load event data
fnl <- file.path(data_path, paste(paste(version, exp, mes, "evt", sep = "_"), ".csv", sep = "") )
data <- read_csv(fnl, show_col_types = FALSE)
### load shortest path data
fnl <- file.path(data_path, paste(paste(version, exp, mes, "opt-path", sep = "_"), ".csv", sep = ""))
opt <- read_csv(fnl, show_col_types = FALSE)
opt <- opt %>%
filter(algorithm == 'tsp')
fnl <- file.path(project_path,'src-paths','graph.csv')
graph <- read_csv(fnl,col_names = FALSE,show_col_types = FALSE)
### extract stereotypy metrics
counts <- count_stereo(data,opt,graph)
# save to file
fnl <- file.path(project_path, "res", paste(paste(version, exp, mes, "reclicks", sep = "_"), ".csv",
sep = ""))
write_csv(counts[[1]], fnl)
fnl <- file.path(project_path, "res", paste(paste(version, exp, mes, "transitions", sep = "_"), ".csv",
sep = ""))
write_csv(counts[[2]], fnl)
fnl <- file.path(project_path, "res", paste(paste(version,exp,mes,"travelled",sep="_"),".csv",sep=""))
write_csv(counts[[3]],fnl)
### cluster participants based on stereotypy and accuracy
### use maggi method to trace change in stereotypy (extent or type)
